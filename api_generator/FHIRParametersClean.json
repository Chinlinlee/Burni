{
    "Patient": [
        {
            "parameter": "address",
            "type": "string",
            "field": "Patient.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "Patient.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "Patient.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "Patient.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "Patient.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "Patient.address.use"
        },
        {
            "parameter": "birthdate",
            "type": "date",
            "field": "Patient.birthDate"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "Patient.telecom.where(system='email')"
        },
        {
            "parameter": "family",
            "type": "string",
            "field": "Patient.name.family"
        },
        {
            "parameter": "gender",
            "type": "token",
            "field": "Patient.gender"
        },
        {
            "parameter": "given",
            "type": "string",
            "field": "Patient.name.given"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "Patient.telecom.where(system='phone')"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "Patient.name"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "Patient.telecom"
        },
        {
            "parameter": "active",
            "type": "token",
            "field": "Patient.active"
        },
        {
            "parameter": "death-date",
            "type": "date",
            "field": "(Patient.deceased as dateTime)"
        },
        {
            "parameter": "deceased",
            "type": "token",
            "field": "Patient.deceased.exists() and Patient.deceased != false"
        },
        {
            "parameter": "general-practitioner",
            "type": "reference",
            "field": "Patient.generalPractitioner"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Patient.identifier"
        },
        {
            "parameter": "language",
            "type": "token",
            "field": "Patient.communication.language"
        },
        {
            "parameter": "link",
            "type": "reference",
            "field": "Patient.link.other"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Patient.name"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Patient.managingOrganization"
        }
    ],
    "AllergyIntolerance": [
        {
            "parameter": "code",
            "type": "token",
            "field": "AllergyIntolerance.code|AllergyIntolerance.reaction.substance"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "AllergyIntolerance.recordedDate"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "AllergyIntolerance.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "AllergyIntolerance.patient"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "AllergyIntolerance.type"
        },
        {
            "parameter": "asserter",
            "type": "reference",
            "field": "AllergyIntolerance.asserter"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "AllergyIntolerance.category"
        },
        {
            "parameter": "clinical-status",
            "type": "token",
            "field": "AllergyIntolerance.clinicalStatus"
        },
        {
            "parameter": "criticality",
            "type": "token",
            "field": "AllergyIntolerance.criticality"
        },
        {
            "parameter": "last-date",
            "type": "date",
            "field": "AllergyIntolerance.lastOccurrence"
        },
        {
            "parameter": "manifestation",
            "type": "token",
            "field": "AllergyIntolerance.reaction.manifestation"
        },
        {
            "parameter": "onset",
            "type": "date",
            "field": "AllergyIntolerance.reaction.onset"
        },
        {
            "parameter": "recorder",
            "type": "reference",
            "field": "AllergyIntolerance.recorder"
        },
        {
            "parameter": "route",
            "type": "token",
            "field": "AllergyIntolerance.reaction.exposureRoute"
        },
        {
            "parameter": "severity",
            "type": "token",
            "field": "AllergyIntolerance.reaction.severity"
        },
        {
            "parameter": "verification-status",
            "type": "token",
            "field": "AllergyIntolerance.verificationStatus"
        }
    ],
    "CapabilityStatement": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(CapabilityStatement.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(CapabilityStatement.useContext.value as Quantity)|(CapabilityStatement.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "CapabilityStatement.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "CapabilityStatement.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "CapabilityStatement.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "CapabilityStatement.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "CapabilityStatement.description"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "CapabilityStatement.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "CapabilityStatement.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "CapabilityStatement.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CapabilityStatement.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "CapabilityStatement.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "CapabilityStatement.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "CapabilityStatement.version"
        },
        {
            "parameter": "fhirversion",
            "type": "token",
            "field": "CapabilityStatement.version"
        },
        {
            "parameter": "format",
            "type": "token",
            "field": "CapabilityStatement.format"
        },
        {
            "parameter": "guide",
            "type": "reference",
            "field": "CapabilityStatement.implementationGuide"
        },
        {
            "parameter": "mode",
            "type": "token",
            "field": "CapabilityStatement.rest.mode"
        },
        {
            "parameter": "resource",
            "type": "token",
            "field": "CapabilityStatement.rest.resource.type"
        },
        {
            "parameter": "resource-profile",
            "type": "reference",
            "field": "CapabilityStatement.rest.resource.profile"
        },
        {
            "parameter": "security-service",
            "type": "token",
            "field": "CapabilityStatement.rest.security.service"
        },
        {
            "parameter": "software",
            "type": "string",
            "field": "CapabilityStatement.software.name"
        },
        {
            "parameter": "supported-profile",
            "type": "reference",
            "field": "CapabilityStatement.rest.resource.supportedProfile"
        }
    ],
    "Composition": [
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Composition.encounter"
        },
        {
            "parameter": "attester",
            "type": "reference",
            "field": "Composition.attester.party"
        },
        {
            "parameter": "author",
            "type": "reference",
            "field": "Composition.author"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Composition.category"
        },
        {
            "parameter": "confidentiality",
            "type": "token",
            "field": "Composition.confidentiality"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "Composition.event.code"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Composition.date"
        },
        {
            "parameter": "entry",
            "type": "reference",
            "field": "Composition.section.entry"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Composition.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Composition.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "Composition.event.period"
        },
        {
            "parameter": "related-id",
            "type": "token",
            "field": "(Composition.relatesTo.target as Identifier)"
        },
        {
            "parameter": "related-ref",
            "type": "reference",
            "field": "(Composition.relatesTo.target as Reference)"
        },
        {
            "parameter": "section",
            "type": "token",
            "field": "Composition.section.code"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Composition.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Composition.subject"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "Composition.title"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Composition.type"
        }
    ],
    "CodeSystem": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CodeSystem.identifier"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "CodeSystem.concept.code"
        },
        {
            "parameter": "content-mode",
            "type": "token",
            "field": "CodeSystem.content"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(CodeSystem.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(CodeSystem.useContext.value as Quantity)|(CodeSystem.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "CodeSystem.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "CodeSystem.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "CodeSystem.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "CodeSystem.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "CodeSystem.description"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "CodeSystem.jurisdiction"
        },
        {
            "parameter": "language",
            "type": "token",
            "field": "CodeSystem.concept.designation.language"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "CodeSystem.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "CodeSystem.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CodeSystem.status"
        },
        {
            "parameter": "supplements",
            "type": "reference",
            "field": "CodeSystem.supplements"
        },
        {
            "parameter": "system",
            "type": "uri",
            "field": "CodeSystem.url"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "CodeSystem.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "CodeSystem.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "CodeSystem.version"
        }
    ],
    "MedicationAdministration": [
        {
            "parameter": "medication",
            "type": "reference",
            "field": "(MedicationAdministration.medication as Reference)"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicationAdministration.status"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "(MedicationAdministration.medication as CodeableConcept)"
        },
        {
            "parameter": "context",
            "type": "reference",
            "field": "MedicationAdministration.context"
        },
        {
            "parameter": "device",
            "type": "reference",
            "field": "MedicationAdministration.device"
        },
        {
            "parameter": "effective-time",
            "type": "date",
            "field": "MedicationAdministration.effective"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicationAdministration.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MedicationAdministration.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "MedicationAdministration.performer.actor"
        },
        {
            "parameter": "reason-given",
            "type": "token",
            "field": "MedicationAdministration.reasonCode"
        },
        {
            "parameter": "reason-not-given",
            "type": "token",
            "field": "MedicationAdministration.statusReason"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "MedicationAdministration.request"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicationAdministration.subject"
        }
    ],
    "Account": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Account.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Account.name"
        },
        {
            "parameter": "owner",
            "type": "reference",
            "field": "Account.owner"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Account.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "Account.servicePeriod"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Account.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Account.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Account.type"
        }
    ],
    "ActivityDefinition": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "ActivityDefinition.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(ActivityDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ActivityDefinition.useContext.value as Quantity)|(ActivityDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ActivityDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ActivityDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ActivityDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ActivityDefinition.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "ActivityDefinition.relatedArtifact.where(type='depends-on').resource|ActivityDefinition.library"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "ActivityDefinition.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ActivityDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "ActivityDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ActivityDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ActivityDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ActivityDefinition.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "ActivityDefinition.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ActivityDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ActivityDefinition.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "ActivityDefinition.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ActivityDefinition.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "ActivityDefinition.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ActivityDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ActivityDefinition.version"
        }
    ],
    "AdverseEvent": [
        {
            "parameter": "actuality",
            "type": "token",
            "field": "AdverseEvent.actuality"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "AdverseEvent.category"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "AdverseEvent.date"
        },
        {
            "parameter": "event",
            "type": "token",
            "field": "AdverseEvent.event"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "AdverseEvent.location"
        },
        {
            "parameter": "recorder",
            "type": "reference",
            "field": "AdverseEvent.recorder"
        },
        {
            "parameter": "resultingcondition",
            "type": "reference",
            "field": "AdverseEvent.resultingCondition"
        },
        {
            "parameter": "seriousness",
            "type": "token",
            "field": "AdverseEvent.seriousness"
        },
        {
            "parameter": "severity",
            "type": "token",
            "field": "AdverseEvent.severity"
        },
        {
            "parameter": "study",
            "type": "reference",
            "field": "AdverseEvent.study"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "AdverseEvent.subject"
        },
        {
            "parameter": "substance",
            "type": "reference",
            "field": "AdverseEvent.suspectEntity.instance"
        }
    ],
    "Appointment": [
        {
            "parameter": "actor",
            "type": "reference",
            "field": "Appointment.participant.actor"
        },
        {
            "parameter": "appointment-type",
            "type": "token",
            "field": "Appointment.appointmentType"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Appointment.basedOn"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Appointment.start"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Appointment.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Appointment.participant.actor.where(resolve() is Location)"
        },
        {
            "parameter": "part-status",
            "type": "token",
            "field": "Appointment.participant.status"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Appointment.participant.actor.where(resolve() is Patient)"
        },
        {
            "parameter": "practitioner",
            "type": "reference",
            "field": "Appointment.participant.actor.where(resolve() is Practitioner)"
        },
        {
            "parameter": "reason-code",
            "type": "token",
            "field": "Appointment.reasonCode"
        },
        {
            "parameter": "reason-reference",
            "type": "reference",
            "field": "Appointment.reasonReference"
        },
        {
            "parameter": "service-category",
            "type": "token",
            "field": "Appointment.serviceCategory"
        },
        {
            "parameter": "service-type",
            "type": "token",
            "field": "Appointment.serviceType"
        },
        {
            "parameter": "slot",
            "type": "reference",
            "field": "Appointment.slot"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "Appointment.specialty"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Appointment.status"
        },
        {
            "parameter": "supporting-info",
            "type": "reference",
            "field": "Appointment.supportingInformation"
        }
    ],
    "AppointmentResponse": [
        {
            "parameter": "actor",
            "type": "reference",
            "field": "AppointmentResponse.actor"
        },
        {
            "parameter": "appointment",
            "type": "reference",
            "field": "AppointmentResponse.appointment"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "AppointmentResponse.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "AppointmentResponse.actor.where(resolve() is Location)"
        },
        {
            "parameter": "part-status",
            "type": "token",
            "field": "AppointmentResponse.participantStatus"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "AppointmentResponse.actor.where(resolve() is Patient)"
        },
        {
            "parameter": "practitioner",
            "type": "reference",
            "field": "AppointmentResponse.actor.where(resolve() is Practitioner)"
        }
    ],
    "AuditEvent": [
        {
            "parameter": "action",
            "type": "token",
            "field": "AuditEvent.action"
        },
        {
            "parameter": "address",
            "type": "string",
            "field": "AuditEvent.agent.network.address"
        },
        {
            "parameter": "agent",
            "type": "reference",
            "field": "AuditEvent.agent.who"
        },
        {
            "parameter": "agent-name",
            "type": "string",
            "field": "AuditEvent.agent.name"
        },
        {
            "parameter": "agent-role",
            "type": "token",
            "field": "AuditEvent.agent.role"
        },
        {
            "parameter": "altid",
            "type": "token",
            "field": "AuditEvent.agent.altId"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "AuditEvent.recorded"
        },
        {
            "parameter": "entity",
            "type": "reference",
            "field": "AuditEvent.entity.what"
        },
        {
            "parameter": "entity-name",
            "type": "string",
            "field": "AuditEvent.entity.name"
        },
        {
            "parameter": "entity-role",
            "type": "token",
            "field": "AuditEvent.entity.role"
        },
        {
            "parameter": "entity-type",
            "type": "token",
            "field": "AuditEvent.entity.type"
        },
        {
            "parameter": "outcome",
            "type": "token",
            "field": "AuditEvent.outcome"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "AuditEvent.agent.who.where(resolve() is Patient)|AuditEvent.entity.what.where(resolve() is Patient)"
        },
        {
            "parameter": "policy",
            "type": "uri",
            "field": "AuditEvent.agent.policy"
        },
        {
            "parameter": "site",
            "type": "token",
            "field": "AuditEvent.source.site"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "AuditEvent.source.observer"
        },
        {
            "parameter": "subtype",
            "type": "token",
            "field": "AuditEvent.subtype"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "AuditEvent.type"
        }
    ],
    "Basic": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "Basic.author"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Basic.code"
        },
        {
            "parameter": "created",
            "type": "date",
            "field": "Basic.created"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Basic.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Basic.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Basic.subject"
        }
    ],
    "BodyStructure": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "BodyStructure.identifier"
        },
        {
            "parameter": "location",
            "type": "token",
            "field": "BodyStructure.location"
        },
        {
            "parameter": "morphology",
            "type": "token",
            "field": "BodyStructure.morphology"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "BodyStructure.patient"
        }
    ],
    "Bundle": [
        {
            "parameter": "composition",
            "type": "reference",
            "field": "Bundle.entry[0].resource"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Bundle.identifier"
        },
        {
            "parameter": "message",
            "type": "reference",
            "field": "Bundle.entry[0].resource"
        },
        {
            "parameter": "timestamp",
            "type": "date",
            "field": "Bundle.timestamp"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Bundle.type"
        }
    ],
    "CarePlan": [
        {
            "parameter": "activity-code",
            "type": "token",
            "field": "CarePlan.activity.detail.code"
        },
        {
            "parameter": "activity-date",
            "type": "date",
            "field": "CarePlan.activity.detail.scheduled"
        },
        {
            "parameter": "activity-reference",
            "type": "reference",
            "field": "CarePlan.activity.reference"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "CarePlan.basedOn"
        },
        {
            "parameter": "care-team",
            "type": "reference",
            "field": "CarePlan.careTeam"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "CarePlan.category"
        },
        {
            "parameter": "condition",
            "type": "reference",
            "field": "CarePlan.addresses"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "CarePlan.period"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "CarePlan.encounter"
        },
        {
            "parameter": "goal",
            "type": "reference",
            "field": "CarePlan.goal"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CarePlan.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "CarePlan.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "CarePlan.instantiatesUri"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "CarePlan.intent"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "CarePlan.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "CarePlan.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "CarePlan.activity.detail.performer"
        },
        {
            "parameter": "replaces",
            "type": "reference",
            "field": "CarePlan.replaces"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CarePlan.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "CarePlan.subject"
        }
    ],
    "CareTeam": [
        {
            "parameter": "category",
            "type": "token",
            "field": "CareTeam.category"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "CareTeam.period"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "CareTeam.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CareTeam.identifier"
        },
        {
            "parameter": "participant",
            "type": "reference",
            "field": "CareTeam.participant.member"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "CareTeam.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CareTeam.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "CareTeam.subject"
        }
    ],
    "ChargeItem": [
        {
            "parameter": "account",
            "type": "reference",
            "field": "ChargeItem.account"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "ChargeItem.code"
        },
        {
            "parameter": "context",
            "type": "reference",
            "field": "ChargeItem.context"
        },
        {
            "parameter": "entered-date",
            "type": "date",
            "field": "ChargeItem.enteredDate"
        },
        {
            "parameter": "enterer",
            "type": "reference",
            "field": "ChargeItem.enterer"
        },
        {
            "parameter": "factor-override",
            "type": "number",
            "field": "ChargeItem.factorOverride"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ChargeItem.identifier"
        },
        {
            "parameter": "occurrence",
            "type": "date",
            "field": "ChargeItem.occurrence"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ChargeItem.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer-actor",
            "type": "reference",
            "field": "ChargeItem.performer.actor"
        },
        {
            "parameter": "performer-function",
            "type": "token",
            "field": "ChargeItem.performer.function"
        },
        {
            "parameter": "performing-organization",
            "type": "reference",
            "field": "ChargeItem.performingOrganization"
        },
        {
            "parameter": "price-override",
            "type": "quantity",
            "field": "ChargeItem.priceOverride"
        },
        {
            "parameter": "quantity",
            "type": "quantity",
            "field": "ChargeItem.quantity"
        },
        {
            "parameter": "requesting-organization",
            "type": "reference",
            "field": "ChargeItem.requestingOrganization"
        },
        {
            "parameter": "service",
            "type": "reference",
            "field": "ChargeItem.service"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "ChargeItem.subject"
        }
    ],
    "ChargeItemDefinition": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(ChargeItemDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ChargeItemDefinition.useContext.value as Quantity)|(ChargeItemDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ChargeItemDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ChargeItemDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ChargeItemDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ChargeItemDefinition.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ChargeItemDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "ChargeItemDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ChargeItemDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ChargeItemDefinition.jurisdiction"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ChargeItemDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ChargeItemDefinition.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ChargeItemDefinition.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ChargeItemDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ChargeItemDefinition.version"
        }
    ],
    "Claim": [
        {
            "parameter": "care-team",
            "type": "reference",
            "field": "Claim.careTeam.provider"
        },
        {
            "parameter": "created",
            "type": "date",
            "field": "Claim.created"
        },
        {
            "parameter": "detail-udi",
            "type": "reference",
            "field": "Claim.item.detail.udi"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Claim.item.encounter"
        },
        {
            "parameter": "enterer",
            "type": "reference",
            "field": "Claim.enterer"
        },
        {
            "parameter": "facility",
            "type": "reference",
            "field": "Claim.facility"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Claim.identifier"
        },
        {
            "parameter": "insurer",
            "type": "reference",
            "field": "Claim.insurer"
        },
        {
            "parameter": "item-udi",
            "type": "reference",
            "field": "Claim.item.udi"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Claim.patient"
        },
        {
            "parameter": "payee",
            "type": "reference",
            "field": "Claim.payee.party"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "Claim.priority"
        },
        {
            "parameter": "procedure-udi",
            "type": "reference",
            "field": "Claim.procedure.udi"
        },
        {
            "parameter": "provider",
            "type": "reference",
            "field": "Claim.provider"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Claim.status"
        },
        {
            "parameter": "subdetail-udi",
            "type": "reference",
            "field": "Claim.item.detail.subDetail.udi"
        },
        {
            "parameter": "use",
            "type": "token",
            "field": "Claim.use"
        }
    ],
    "ClaimResponse": [
        {
            "parameter": "created",
            "type": "date",
            "field": "ClaimResponse.created"
        },
        {
            "parameter": "disposition",
            "type": "string",
            "field": "ClaimResponse.disposition"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ClaimResponse.identifier"
        },
        {
            "parameter": "insurer",
            "type": "reference",
            "field": "ClaimResponse.insurer"
        },
        {
            "parameter": "outcome",
            "type": "token",
            "field": "ClaimResponse.outcome"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ClaimResponse.patient"
        },
        {
            "parameter": "payment-date",
            "type": "date",
            "field": "ClaimResponse.payment.date"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "ClaimResponse.request"
        },
        {
            "parameter": "requestor",
            "type": "reference",
            "field": "ClaimResponse.requestor"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ClaimResponse.status"
        },
        {
            "parameter": "use",
            "type": "token",
            "field": "ClaimResponse.use"
        }
    ],
    "ClinicalImpression": [
        {
            "parameter": "assessor",
            "type": "reference",
            "field": "ClinicalImpression.assessor"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ClinicalImpression.date"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "ClinicalImpression.encounter"
        },
        {
            "parameter": "finding-code",
            "type": "token",
            "field": "ClinicalImpression.finding.itemCodeableConcept"
        },
        {
            "parameter": "finding-ref",
            "type": "reference",
            "field": "ClinicalImpression.finding.itemReference"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ClinicalImpression.identifier"
        },
        {
            "parameter": "investigation",
            "type": "reference",
            "field": "ClinicalImpression.investigation.item"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ClinicalImpression.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "previous",
            "type": "reference",
            "field": "ClinicalImpression.previous"
        },
        {
            "parameter": "problem",
            "type": "reference",
            "field": "ClinicalImpression.problem"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ClinicalImpression.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "ClinicalImpression.subject"
        },
        {
            "parameter": "supporting-info",
            "type": "reference",
            "field": "ClinicalImpression.supportingInfo"
        }
    ],
    "Communication": [
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Communication.basedOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Communication.category"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Communication.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Communication.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "Communication.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "Communication.instantiatesUri"
        },
        {
            "parameter": "medium",
            "type": "token",
            "field": "Communication.medium"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "Communication.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Communication.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "received",
            "type": "date",
            "field": "Communication.received"
        },
        {
            "parameter": "recipient",
            "type": "reference",
            "field": "Communication.recipient"
        },
        {
            "parameter": "sender",
            "type": "reference",
            "field": "Communication.sender"
        },
        {
            "parameter": "sent",
            "type": "date",
            "field": "Communication.sent"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Communication.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Communication.subject"
        }
    ],
    "CommunicationRequest": [
        {
            "parameter": "authored",
            "type": "date",
            "field": "CommunicationRequest.authoredOn"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "CommunicationRequest.basedOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "CommunicationRequest.category"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "CommunicationRequest.encounter"
        },
        {
            "parameter": "group-identifier",
            "type": "token",
            "field": "CommunicationRequest.groupIdentifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CommunicationRequest.identifier"
        },
        {
            "parameter": "medium",
            "type": "token",
            "field": "CommunicationRequest.medium"
        },
        {
            "parameter": "occurrence",
            "type": "date",
            "field": "(CommunicationRequest.occurrence as dateTime)"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "CommunicationRequest.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "CommunicationRequest.priority"
        },
        {
            "parameter": "recipient",
            "type": "reference",
            "field": "CommunicationRequest.recipient"
        },
        {
            "parameter": "replaces",
            "type": "reference",
            "field": "CommunicationRequest.replaces"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "CommunicationRequest.requester"
        },
        {
            "parameter": "sender",
            "type": "reference",
            "field": "CommunicationRequest.sender"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CommunicationRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "CommunicationRequest.subject"
        }
    ],
    "CompartmentDefinition": [
        {
            "parameter": "code",
            "type": "token",
            "field": "CompartmentDefinition.code"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(CompartmentDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(CompartmentDefinition.useContext.value as Quantity)|(CompartmentDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "CompartmentDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "CompartmentDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "CompartmentDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "CompartmentDefinition.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "CompartmentDefinition.description"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "CompartmentDefinition.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "CompartmentDefinition.publisher"
        },
        {
            "parameter": "resource",
            "type": "token",
            "field": "CompartmentDefinition.resource.code"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CompartmentDefinition.status"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "CompartmentDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "CompartmentDefinition.version"
        }
    ],
    "ConceptMap": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(ConceptMap.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ConceptMap.useContext.value as Quantity)|(ConceptMap.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ConceptMap.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ConceptMap.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ConceptMap.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ConceptMap.date"
        },
        {
            "parameter": "dependson",
            "type": "uri",
            "field": "ConceptMap.group.element.target.dependsOn.property"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ConceptMap.description"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ConceptMap.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ConceptMap.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ConceptMap.name"
        },
        {
            "parameter": "other",
            "type": "reference",
            "field": "ConceptMap.group.unmapped.url"
        },
        {
            "parameter": "product",
            "type": "uri",
            "field": "ConceptMap.group.element.target.product.property"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ConceptMap.publisher"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "(ConceptMap.source as canonical)"
        },
        {
            "parameter": "source-code",
            "type": "token",
            "field": "ConceptMap.group.element.code"
        },
        {
            "parameter": "source-system",
            "type": "uri",
            "field": "ConceptMap.group.source"
        },
        {
            "parameter": "source-uri",
            "type": "reference",
            "field": "(ConceptMap.source as uri)"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ConceptMap.status"
        },
        {
            "parameter": "target",
            "type": "reference",
            "field": "(ConceptMap.target as canonical)"
        },
        {
            "parameter": "target-code",
            "type": "token",
            "field": "ConceptMap.group.element.target.code"
        },
        {
            "parameter": "target-system",
            "type": "uri",
            "field": "ConceptMap.group.target"
        },
        {
            "parameter": "target-uri",
            "type": "reference",
            "field": "(ConceptMap.target as uri)"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ConceptMap.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ConceptMap.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ConceptMap.version"
        }
    ],
    "Condition": [
        {
            "parameter": "abatement-age",
            "type": "quantity",
            "field": "Condition.abatement.as(Age)|Condition.abatement.as(Range)"
        },
        {
            "parameter": "abatement-date",
            "type": "date",
            "field": "Condition.abatement.as(dateTime)|Condition.abatement.as(Period)"
        },
        {
            "parameter": "abatement-string",
            "type": "string",
            "field": "Condition.abatement.as(string)"
        },
        {
            "parameter": "asserter",
            "type": "reference",
            "field": "Condition.asserter"
        },
        {
            "parameter": "body-site",
            "type": "token",
            "field": "Condition.bodySite"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Condition.category"
        },
        {
            "parameter": "clinical-status",
            "type": "token",
            "field": "Condition.clinicalStatus"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Condition.code"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Condition.encounter"
        },
        {
            "parameter": "evidence",
            "type": "token",
            "field": "Condition.evidence.code"
        },
        {
            "parameter": "evidence-detail",
            "type": "reference",
            "field": "Condition.evidence.detail"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Condition.identifier"
        },
        {
            "parameter": "onset-age",
            "type": "quantity",
            "field": "Condition.onset.as(Age)|Condition.onset.as(Range)"
        },
        {
            "parameter": "onset-date",
            "type": "date",
            "field": "Condition.onset.as(dateTime)|Condition.onset.as(Period)"
        },
        {
            "parameter": "onset-info",
            "type": "string",
            "field": "Condition.onset.as(string)"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Condition.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "recorded-date",
            "type": "date",
            "field": "Condition.recordedDate"
        },
        {
            "parameter": "severity",
            "type": "token",
            "field": "Condition.severity"
        },
        {
            "parameter": "stage",
            "type": "token",
            "field": "Condition.stage.summary"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Condition.subject"
        },
        {
            "parameter": "verification-status",
            "type": "token",
            "field": "Condition.verificationStatus"
        }
    ],
    "Consent": [
        {
            "parameter": "action",
            "type": "token",
            "field": "Consent.provision.action"
        },
        {
            "parameter": "actor",
            "type": "reference",
            "field": "Consent.provision.actor.reference"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Consent.category"
        },
        {
            "parameter": "consentor",
            "type": "reference",
            "field": "Consent.performer"
        },
        {
            "parameter": "data",
            "type": "reference",
            "field": "Consent.provision.data.reference"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Consent.dateTime"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Consent.identifier"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Consent.organization"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Consent.patient"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "Consent.provision.period"
        },
        {
            "parameter": "purpose",
            "type": "token",
            "field": "Consent.provision.purpose"
        },
        {
            "parameter": "scope",
            "type": "token",
            "field": "Consent.scope"
        },
        {
            "parameter": "security-label",
            "type": "token",
            "field": "Consent.provision.securityLabel"
        },
        {
            "parameter": "source-reference",
            "type": "reference",
            "field": "Consent.source"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Consent.status"
        }
    ],
    "Contract": [
        {
            "parameter": "authority",
            "type": "reference",
            "field": "Contract.authority"
        },
        {
            "parameter": "domain",
            "type": "reference",
            "field": "Contract.domain"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Contract.identifier"
        },
        {
            "parameter": "instantiates",
            "type": "uri",
            "field": "Contract.instantiatesUri"
        },
        {
            "parameter": "issued",
            "type": "date",
            "field": "Contract.issued"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Contract.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "signer",
            "type": "reference",
            "field": "Contract.signer.party"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Contract.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Contract.subject"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Contract.url"
        }
    ],
    "Coverage": [
        {
            "parameter": "beneficiary",
            "type": "reference",
            "field": "Coverage.beneficiary"
        },
        {
            "parameter": "class-type",
            "type": "token",
            "field": "Coverage.class.type"
        },
        {
            "parameter": "class-value",
            "type": "string",
            "field": "Coverage.class.value"
        },
        {
            "parameter": "dependent",
            "type": "string",
            "field": "Coverage.dependent"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Coverage.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Coverage.beneficiary"
        },
        {
            "parameter": "payor",
            "type": "reference",
            "field": "Coverage.payor"
        },
        {
            "parameter": "policy-holder",
            "type": "reference",
            "field": "Coverage.policyHolder"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Coverage.status"
        },
        {
            "parameter": "subscriber",
            "type": "reference",
            "field": "Coverage.subscriber"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Coverage.type"
        }
    ],
    "CoverageEligibilityRequest": [
        {
            "parameter": "created",
            "type": "date",
            "field": "CoverageEligibilityRequest.created"
        },
        {
            "parameter": "enterer",
            "type": "reference",
            "field": "CoverageEligibilityRequest.enterer"
        },
        {
            "parameter": "facility",
            "type": "reference",
            "field": "CoverageEligibilityRequest.facility"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CoverageEligibilityRequest.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "CoverageEligibilityRequest.patient"
        },
        {
            "parameter": "provider",
            "type": "reference",
            "field": "CoverageEligibilityRequest.provider"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CoverageEligibilityRequest.status"
        }
    ],
    "CoverageEligibilityResponse": [
        {
            "parameter": "created",
            "type": "date",
            "field": "CoverageEligibilityResponse.created"
        },
        {
            "parameter": "disposition",
            "type": "string",
            "field": "CoverageEligibilityResponse.disposition"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "CoverageEligibilityResponse.identifier"
        },
        {
            "parameter": "insurer",
            "type": "reference",
            "field": "CoverageEligibilityResponse.insurer"
        },
        {
            "parameter": "outcome",
            "type": "token",
            "field": "CoverageEligibilityResponse.outcome"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "CoverageEligibilityResponse.patient"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "CoverageEligibilityResponse.request"
        },
        {
            "parameter": "requestor",
            "type": "reference",
            "field": "CoverageEligibilityResponse.requestor"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "CoverageEligibilityResponse.status"
        }
    ],
    "DetectedIssue": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "DetectedIssue.author"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "DetectedIssue.code"
        },
        {
            "parameter": "identified",
            "type": "date",
            "field": "DetectedIssue.identified"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DetectedIssue.identifier"
        },
        {
            "parameter": "implicated",
            "type": "reference",
            "field": "DetectedIssue.implicated"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DetectedIssue.patient"
        }
    ],
    "Device": [
        {
            "parameter": "device-name",
            "type": "string",
            "field": "Device.deviceName.name|Device.type.coding.display|Device.type.text"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Device.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Device.location"
        },
        {
            "parameter": "manufacturer",
            "type": "string",
            "field": "Device.manufacturer"
        },
        {
            "parameter": "model",
            "type": "string",
            "field": "Device.modelNumber"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Device.owner"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Device.patient"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Device.status"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Device.type"
        },
        {
            "parameter": "udi-carrier",
            "type": "string",
            "field": "Device.udiCarrier.carrierHRF"
        },
        {
            "parameter": "udi-di",
            "type": "string",
            "field": "Device.udiCarrier.deviceIdentifier"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Device.url"
        }
    ],
    "DeviceDefinition": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DeviceDefinition.identifier"
        },
        {
            "parameter": "parent",
            "type": "reference",
            "field": "DeviceDefinition.parentDevice"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "DeviceDefinition.type"
        }
    ],
    "DeviceMetric": [
        {
            "parameter": "category",
            "type": "token",
            "field": "DeviceMetric.category"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DeviceMetric.identifier"
        },
        {
            "parameter": "parent",
            "type": "reference",
            "field": "DeviceMetric.parent"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "DeviceMetric.source"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "DeviceMetric.type"
        }
    ],
    "DeviceRequest": [
        {
            "parameter": "authored-on",
            "type": "date",
            "field": "DeviceRequest.authoredOn"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "DeviceRequest.basedOn"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "(DeviceRequest.code as CodeableConcept)"
        },
        {
            "parameter": "device",
            "type": "reference",
            "field": "(DeviceRequest.code as Reference)"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "DeviceRequest.encounter"
        },
        {
            "parameter": "event-date",
            "type": "date",
            "field": "(DeviceRequest.occurrence as dateTime)|(DeviceRequest.occurrence as Period)"
        },
        {
            "parameter": "group-identifier",
            "type": "token",
            "field": "DeviceRequest.groupIdentifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DeviceRequest.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "DeviceRequest.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "DeviceRequest.instantiatesUri"
        },
        {
            "parameter": "insurance",
            "type": "reference",
            "field": "DeviceRequest.insurance"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "DeviceRequest.intent"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DeviceRequest.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "DeviceRequest.performer"
        },
        {
            "parameter": "prior-request",
            "type": "reference",
            "field": "DeviceRequest.priorRequest"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "DeviceRequest.requester"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "DeviceRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "DeviceRequest.subject"
        }
    ],
    "DeviceUseStatement": [
        {
            "parameter": "device",
            "type": "reference",
            "field": "DeviceUseStatement.device"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DeviceUseStatement.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DeviceUseStatement.subject"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "DeviceUseStatement.subject"
        }
    ],
    "DiagnosticReport": [
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "DiagnosticReport.basedOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "DiagnosticReport.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "DiagnosticReport.code"
        },
        {
            "parameter": "conclusion",
            "type": "token",
            "field": "DiagnosticReport.conclusionCode"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "DiagnosticReport.effective"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "DiagnosticReport.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DiagnosticReport.identifier"
        },
        {
            "parameter": "issued",
            "type": "date",
            "field": "DiagnosticReport.issued"
        },
        {
            "parameter": "media",
            "type": "reference",
            "field": "DiagnosticReport.media.link"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DiagnosticReport.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "DiagnosticReport.performer"
        },
        {
            "parameter": "result",
            "type": "reference",
            "field": "DiagnosticReport.result"
        },
        {
            "parameter": "results-interpreter",
            "type": "reference",
            "field": "DiagnosticReport.resultsInterpreter"
        },
        {
            "parameter": "specimen",
            "type": "reference",
            "field": "DiagnosticReport.specimen"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "DiagnosticReport.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "DiagnosticReport.subject"
        }
    ],
    "DocumentManifest": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "DocumentManifest.author"
        },
        {
            "parameter": "created",
            "type": "date",
            "field": "DocumentManifest.created"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "DocumentManifest.description"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DocumentManifest.masterIdentifier|DocumentManifest.identifier"
        },
        {
            "parameter": "item",
            "type": "reference",
            "field": "DocumentManifest.content"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DocumentManifest.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "recipient",
            "type": "reference",
            "field": "DocumentManifest.recipient"
        },
        {
            "parameter": "related-id",
            "type": "token",
            "field": "DocumentManifest.related.identifier"
        },
        {
            "parameter": "related-ref",
            "type": "reference",
            "field": "DocumentManifest.related.ref"
        },
        {
            "parameter": "source",
            "type": "uri",
            "field": "DocumentManifest.source"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "DocumentManifest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "DocumentManifest.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "DocumentManifest.type"
        }
    ],
    "DocumentReference": [
        {
            "parameter": "authenticator",
            "type": "reference",
            "field": "DocumentReference.authenticator"
        },
        {
            "parameter": "author",
            "type": "reference",
            "field": "DocumentReference.author"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "DocumentReference.category"
        },
        {
            "parameter": "contenttype",
            "type": "token",
            "field": "DocumentReference.content.attachment.contentType"
        },
        {
            "parameter": "custodian",
            "type": "reference",
            "field": "DocumentReference.custodian"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "DocumentReference.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "DocumentReference.description"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "DocumentReference.context.encounter"
        },
        {
            "parameter": "event",
            "type": "token",
            "field": "DocumentReference.context.event"
        },
        {
            "parameter": "facility",
            "type": "token",
            "field": "DocumentReference.context.facilityType"
        },
        {
            "parameter": "format",
            "type": "token",
            "field": "DocumentReference.content.format"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "DocumentReference.masterIdentifier|DocumentReference.identifier"
        },
        {
            "parameter": "language",
            "type": "token",
            "field": "DocumentReference.content.attachment.language"
        },
        {
            "parameter": "location",
            "type": "uri",
            "field": "DocumentReference.content.attachment.url"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "DocumentReference.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "DocumentReference.context.period"
        },
        {
            "parameter": "related",
            "type": "reference",
            "field": "DocumentReference.context.related"
        },
        {
            "parameter": "relatesto",
            "type": "reference",
            "field": "DocumentReference.relatesTo.target"
        },
        {
            "parameter": "relation",
            "type": "token",
            "field": "DocumentReference.relatesTo.code"
        },
        {
            "parameter": "relationship",
            "type": "composite",
            "field": "DocumentReference.relatesTo"
        },
        {
            "parameter": "security-label",
            "type": "token",
            "field": "DocumentReference.securityLabel"
        },
        {
            "parameter": "setting",
            "type": "token",
            "field": "DocumentReference.context.practiceSetting"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "DocumentReference.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "DocumentReference.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "DocumentReference.type"
        }
    ],
    "EffectEvidenceSynthesis": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(EffectEvidenceSynthesis.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(EffectEvidenceSynthesis.useContext.value as Quantity)|(EffectEvidenceSynthesis.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "EffectEvidenceSynthesis.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "EffectEvidenceSynthesis.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "EffectEvidenceSynthesis.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "EffectEvidenceSynthesis.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "EffectEvidenceSynthesis.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "EffectEvidenceSynthesis.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EffectEvidenceSynthesis.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "EffectEvidenceSynthesis.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "EffectEvidenceSynthesis.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "EffectEvidenceSynthesis.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EffectEvidenceSynthesis.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "EffectEvidenceSynthesis.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "EffectEvidenceSynthesis.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "EffectEvidenceSynthesis.version"
        }
    ],
    "Encounter": [
        {
            "parameter": "account",
            "type": "reference",
            "field": "Encounter.account"
        },
        {
            "parameter": "appointment",
            "type": "reference",
            "field": "Encounter.appointment"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Encounter.basedOn"
        },
        {
            "parameter": "class",
            "type": "token",
            "field": "Encounter.class"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Encounter.period"
        },
        {
            "parameter": "diagnosis",
            "type": "reference",
            "field": "Encounter.diagnosis.condition"
        },
        {
            "parameter": "episode-of-care",
            "type": "reference",
            "field": "Encounter.episodeOfCare"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Encounter.identifier"
        },
        {
            "parameter": "length",
            "type": "quantity",
            "field": "Encounter.length"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Encounter.location.location"
        },
        {
            "parameter": "location-period",
            "type": "date",
            "field": "Encounter.location.period"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "Encounter.partOf"
        },
        {
            "parameter": "participant",
            "type": "reference",
            "field": "Encounter.participant.individual"
        },
        {
            "parameter": "participant-type",
            "type": "token",
            "field": "Encounter.participant.type"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Encounter.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "practitioner",
            "type": "reference",
            "field": "Encounter.participant.individual.where(resolve() is Practitioner)"
        },
        {
            "parameter": "reason-code",
            "type": "token",
            "field": "Encounter.reasonCode"
        },
        {
            "parameter": "reason-reference",
            "type": "reference",
            "field": "Encounter.reasonReference"
        },
        {
            "parameter": "service-provider",
            "type": "reference",
            "field": "Encounter.serviceProvider"
        },
        {
            "parameter": "special-arrangement",
            "type": "token",
            "field": "Encounter.hospitalization.specialArrangement"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Encounter.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Encounter.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Encounter.type"
        }
    ],
    "Endpoint": [
        {
            "parameter": "connection-type",
            "type": "token",
            "field": "Endpoint.connectionType"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Endpoint.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Endpoint.name"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Endpoint.managingOrganization"
        },
        {
            "parameter": "payload-type",
            "type": "token",
            "field": "Endpoint.payloadType"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Endpoint.status"
        }
    ],
    "EnrollmentRequest": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EnrollmentRequest.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "EnrollmentRequest.candidate"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EnrollmentRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "EnrollmentRequest.candidate"
        }
    ],
    "EnrollmentResponse": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EnrollmentResponse.identifier"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "EnrollmentResponse.request"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EnrollmentResponse.status"
        }
    ],
    "EpisodeOfCare": [
        {
            "parameter": "care-manager",
            "type": "reference",
            "field": "EpisodeOfCare.careManager.where(resolve() is Practitioner)"
        },
        {
            "parameter": "condition",
            "type": "reference",
            "field": "EpisodeOfCare.diagnosis.condition"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "EpisodeOfCare.period"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EpisodeOfCare.identifier"
        },
        {
            "parameter": "incoming-referral",
            "type": "reference",
            "field": "EpisodeOfCare.referralRequest"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "EpisodeOfCare.managingOrganization"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "EpisodeOfCare.patient"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EpisodeOfCare.status"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "EpisodeOfCare.type"
        }
    ],
    "EventDefinition": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "EventDefinition.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(EventDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(EventDefinition.useContext.value as Quantity)|(EventDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "EventDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "EventDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "EventDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "EventDefinition.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "EventDefinition.relatedArtifact.where(type='depends-on').resource"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "EventDefinition.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "EventDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "EventDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EventDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "EventDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "EventDefinition.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "EventDefinition.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "EventDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EventDefinition.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "EventDefinition.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "EventDefinition.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "EventDefinition.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "EventDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "EventDefinition.version"
        }
    ],
    "Evidence": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "Evidence.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(Evidence.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(Evidence.useContext.value as Quantity)|(Evidence.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "Evidence.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "Evidence.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "Evidence.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Evidence.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "Evidence.relatedArtifact.where(type='depends-on').resource"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "Evidence.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "Evidence.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "Evidence.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Evidence.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "Evidence.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Evidence.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "Evidence.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "Evidence.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Evidence.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "Evidence.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "Evidence.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "Evidence.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Evidence.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "Evidence.version"
        }
    ],
    "EvidenceVariable": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "EvidenceVariable.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(EvidenceVariable.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(EvidenceVariable.useContext.value as Quantity)|(EvidenceVariable.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "EvidenceVariable.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "EvidenceVariable.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "EvidenceVariable.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "EvidenceVariable.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "EvidenceVariable.relatedArtifact.where(type='depends-on').resource"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "EvidenceVariable.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "EvidenceVariable.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "EvidenceVariable.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "EvidenceVariable.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "EvidenceVariable.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "EvidenceVariable.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "EvidenceVariable.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "EvidenceVariable.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "EvidenceVariable.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "EvidenceVariable.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "EvidenceVariable.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "EvidenceVariable.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "EvidenceVariable.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "EvidenceVariable.version"
        }
    ],
    "ExampleScenario": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(ExampleScenario.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ExampleScenario.useContext.value as Quantity)|(ExampleScenario.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ExampleScenario.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ExampleScenario.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ExampleScenario.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ExampleScenario.date"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ExampleScenario.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ExampleScenario.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ExampleScenario.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ExampleScenario.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ExampleScenario.status"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ExampleScenario.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ExampleScenario.version"
        }
    ],
    "ExplanationOfBenefit": [
        {
            "parameter": "care-team",
            "type": "reference",
            "field": "ExplanationOfBenefit.careTeam.provider"
        },
        {
            "parameter": "claim",
            "type": "reference",
            "field": "ExplanationOfBenefit.claim"
        },
        {
            "parameter": "coverage",
            "type": "reference",
            "field": "ExplanationOfBenefit.insurance.coverage"
        },
        {
            "parameter": "created",
            "type": "date",
            "field": "ExplanationOfBenefit.created"
        },
        {
            "parameter": "detail-udi",
            "type": "reference",
            "field": "ExplanationOfBenefit.item.detail.udi"
        },
        {
            "parameter": "disposition",
            "type": "string",
            "field": "ExplanationOfBenefit.disposition"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "ExplanationOfBenefit.item.encounter"
        },
        {
            "parameter": "enterer",
            "type": "reference",
            "field": "ExplanationOfBenefit.enterer"
        },
        {
            "parameter": "facility",
            "type": "reference",
            "field": "ExplanationOfBenefit.facility"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ExplanationOfBenefit.identifier"
        },
        {
            "parameter": "item-udi",
            "type": "reference",
            "field": "ExplanationOfBenefit.item.udi"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ExplanationOfBenefit.patient"
        },
        {
            "parameter": "payee",
            "type": "reference",
            "field": "ExplanationOfBenefit.payee.party"
        },
        {
            "parameter": "procedure-udi",
            "type": "reference",
            "field": "ExplanationOfBenefit.procedure.udi"
        },
        {
            "parameter": "provider",
            "type": "reference",
            "field": "ExplanationOfBenefit.provider"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ExplanationOfBenefit.status"
        },
        {
            "parameter": "subdetail-udi",
            "type": "reference",
            "field": "ExplanationOfBenefit.item.detail.subDetail.udi"
        }
    ],
    "FamilyMemberHistory": [
        {
            "parameter": "code",
            "type": "token",
            "field": "FamilyMemberHistory.condition.code"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "FamilyMemberHistory.date"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "FamilyMemberHistory.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "FamilyMemberHistory.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "FamilyMemberHistory.instantiatesUri"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "FamilyMemberHistory.patient"
        },
        {
            "parameter": "relationship",
            "type": "token",
            "field": "FamilyMemberHistory.relationship"
        },
        {
            "parameter": "sex",
            "type": "token",
            "field": "FamilyMemberHistory.sex"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "FamilyMemberHistory.status"
        }
    ],
    "Flag": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "Flag.author"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Flag.period"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Flag.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Flag.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Flag.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Flag.subject"
        }
    ],
    "Goal": [
        {
            "parameter": "achievement-status",
            "type": "token",
            "field": "Goal.achievementStatus"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Goal.category"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Goal.identifier"
        },
        {
            "parameter": "lifecycle-status",
            "type": "token",
            "field": "Goal.lifecycleStatus"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Goal.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "start-date",
            "type": "date",
            "field": "(Goal.start as date)"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Goal.subject"
        },
        {
            "parameter": "target-date",
            "type": "date",
            "field": "(Goal.target.due as date)"
        }
    ],
    "GraphDefinition": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(GraphDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(GraphDefinition.useContext.value as Quantity)|(GraphDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "GraphDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "GraphDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "GraphDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "GraphDefinition.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "GraphDefinition.description"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "GraphDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "GraphDefinition.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "GraphDefinition.publisher"
        },
        {
            "parameter": "start",
            "type": "token",
            "field": "GraphDefinition.start"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "GraphDefinition.status"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "GraphDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "GraphDefinition.version"
        }
    ],
    "Group": [
        {
            "parameter": "actual",
            "type": "token",
            "field": "Group.actual"
        },
        {
            "parameter": "characteristic",
            "type": "token",
            "field": "Group.characteristic.code"
        },
        {
            "parameter": "characteristic-value",
            "type": "composite",
            "field": "Group.characteristic"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Group.code"
        },
        {
            "parameter": "exclude",
            "type": "token",
            "field": "Group.characteristic.exclude"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Group.identifier"
        },
        {
            "parameter": "managing-entity",
            "type": "reference",
            "field": "Group.managingEntity"
        },
        {
            "parameter": "member",
            "type": "reference",
            "field": "Group.member.entity"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Group.type"
        },
        {
            "parameter": "value",
            "type": "token",
            "field": "(Group.characteristic.value as CodeableConcept)|(Group.characteristic.value as boolean)"
        }
    ],
    "GuidanceResponse": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "GuidanceResponse.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "GuidanceResponse.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "request",
            "type": "token",
            "field": "GuidanceResponse.requestIdentifier"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "GuidanceResponse.subject"
        }
    ],
    "HealthcareService": [
        {
            "parameter": "active",
            "type": "token",
            "field": "HealthcareService.active"
        },
        {
            "parameter": "characteristic",
            "type": "token",
            "field": "HealthcareService.characteristic"
        },
        {
            "parameter": "coverage-area",
            "type": "reference",
            "field": "HealthcareService.coverageArea"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "HealthcareService.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "HealthcareService.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "HealthcareService.location"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "HealthcareService.name"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "HealthcareService.providedBy"
        },
        {
            "parameter": "program",
            "type": "token",
            "field": "HealthcareService.program"
        },
        {
            "parameter": "service-category",
            "type": "token",
            "field": "HealthcareService.category"
        },
        {
            "parameter": "service-type",
            "type": "token",
            "field": "HealthcareService.type"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "HealthcareService.specialty"
        }
    ],
    "ImagingStudy": [
        {
            "parameter": "basedon",
            "type": "reference",
            "field": "ImagingStudy.basedOn"
        },
        {
            "parameter": "bodysite",
            "type": "token",
            "field": "ImagingStudy.series.bodySite"
        },
        {
            "parameter": "dicom-class",
            "type": "token",
            "field": "ImagingStudy.series.instance.sopClass"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "ImagingStudy.encounter"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "ImagingStudy.endpoint|ImagingStudy.series.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ImagingStudy.identifier"
        },
        {
            "parameter": "instance",
            "type": "token",
            "field": "ImagingStudy.series.instance.uid"
        },
        {
            "parameter": "interpreter",
            "type": "reference",
            "field": "ImagingStudy.interpreter"
        },
        {
            "parameter": "modality",
            "type": "token",
            "field": "ImagingStudy.series.modality"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ImagingStudy.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "ImagingStudy.series.performer.actor"
        },
        {
            "parameter": "reason",
            "type": "token",
            "field": "ImagingStudy.reasonCode"
        },
        {
            "parameter": "referrer",
            "type": "reference",
            "field": "ImagingStudy.referrer"
        },
        {
            "parameter": "series",
            "type": "token",
            "field": "ImagingStudy.series.uid"
        },
        {
            "parameter": "started",
            "type": "date",
            "field": "ImagingStudy.started"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ImagingStudy.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "ImagingStudy.subject"
        }
    ],
    "Immunization": [
        {
            "parameter": "date",
            "type": "date",
            "field": "Immunization.occurrence"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Immunization.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Immunization.location"
        },
        {
            "parameter": "lot-number",
            "type": "string",
            "field": "Immunization.lotNumber"
        },
        {
            "parameter": "manufacturer",
            "type": "reference",
            "field": "Immunization.manufacturer"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Immunization.patient"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "Immunization.performer.actor"
        },
        {
            "parameter": "reaction",
            "type": "reference",
            "field": "Immunization.reaction.detail"
        },
        {
            "parameter": "reaction-date",
            "type": "date",
            "field": "Immunization.reaction.date"
        },
        {
            "parameter": "reason-code",
            "type": "token",
            "field": "Immunization.reasonCode"
        },
        {
            "parameter": "reason-reference",
            "type": "reference",
            "field": "Immunization.reasonReference"
        },
        {
            "parameter": "series",
            "type": "string",
            "field": "Immunization.protocolApplied.series"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Immunization.status"
        },
        {
            "parameter": "status-reason",
            "type": "token",
            "field": "Immunization.statusReason"
        },
        {
            "parameter": "target-disease",
            "type": "token",
            "field": "Immunization.protocolApplied.targetDisease"
        },
        {
            "parameter": "vaccine-code",
            "type": "token",
            "field": "Immunization.vaccineCode"
        }
    ],
    "ImmunizationEvaluation": [
        {
            "parameter": "date",
            "type": "date",
            "field": "ImmunizationEvaluation.date"
        },
        {
            "parameter": "dose-status",
            "type": "token",
            "field": "ImmunizationEvaluation.doseStatus"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ImmunizationEvaluation.identifier"
        },
        {
            "parameter": "immunization-event",
            "type": "reference",
            "field": "ImmunizationEvaluation.immunizationEvent"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ImmunizationEvaluation.patient"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ImmunizationEvaluation.status"
        },
        {
            "parameter": "target-disease",
            "type": "token",
            "field": "ImmunizationEvaluation.targetDisease"
        }
    ],
    "ImmunizationRecommendation": [
        {
            "parameter": "date",
            "type": "date",
            "field": "ImmunizationRecommendation.date"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ImmunizationRecommendation.identifier"
        },
        {
            "parameter": "information",
            "type": "reference",
            "field": "ImmunizationRecommendation.recommendation.supportingPatientInformation"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ImmunizationRecommendation.patient"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ImmunizationRecommendation.recommendation.forecastStatus"
        },
        {
            "parameter": "support",
            "type": "reference",
            "field": "ImmunizationRecommendation.recommendation.supportingImmunization"
        },
        {
            "parameter": "target-disease",
            "type": "token",
            "field": "ImmunizationRecommendation.recommendation.targetDisease"
        },
        {
            "parameter": "vaccine-type",
            "type": "token",
            "field": "ImmunizationRecommendation.recommendation.vaccineCode"
        }
    ],
    "ImplementationGuide": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(ImplementationGuide.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ImplementationGuide.useContext.value as Quantity)|(ImplementationGuide.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ImplementationGuide.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ImplementationGuide.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ImplementationGuide.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ImplementationGuide.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "ImplementationGuide.dependsOn.uri"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ImplementationGuide.description"
        },
        {
            "parameter": "experimental",
            "type": "token",
            "field": "ImplementationGuide.experimental"
        },
        {
            "parameter": "global",
            "type": "reference",
            "field": "ImplementationGuide.global.profile"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ImplementationGuide.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ImplementationGuide.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ImplementationGuide.publisher"
        },
        {
            "parameter": "resource",
            "type": "reference",
            "field": "ImplementationGuide.definition.resource.reference"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ImplementationGuide.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ImplementationGuide.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ImplementationGuide.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ImplementationGuide.version"
        }
    ],
    "InsurancePlan": [
        {
            "parameter": "address",
            "type": "string",
            "field": "InsurancePlan.contact.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "InsurancePlan.contact.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "InsurancePlan.contact.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "InsurancePlan.contact.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "InsurancePlan.contact.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "InsurancePlan.contact.address.use"
        },
        {
            "parameter": "administered-by",
            "type": "reference",
            "field": "InsurancePlan.administeredBy"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "InsurancePlan.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "InsurancePlan.identifier"
        },
        {
            "parameter": "owned-by",
            "type": "reference",
            "field": "InsurancePlan.ownedBy"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "InsurancePlan.name"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "InsurancePlan.status"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "InsurancePlan.type"
        }
    ],
    "name | alias": [
        {
            "parameter": "name",
            "type": "string",
            "field": ""
        }
    ],
    "Invoice": [
        {
            "parameter": "account",
            "type": "reference",
            "field": "Invoice.account"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Invoice.date"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Invoice.identifier"
        },
        {
            "parameter": "issuer",
            "type": "reference",
            "field": "Invoice.issuer"
        },
        {
            "parameter": "participant",
            "type": "reference",
            "field": "Invoice.participant.actor"
        },
        {
            "parameter": "participant-role",
            "type": "token",
            "field": "Invoice.participant.role"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Invoice.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "recipient",
            "type": "reference",
            "field": "Invoice.recipient"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Invoice.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Invoice.subject"
        },
        {
            "parameter": "totalgross",
            "type": "quantity",
            "field": "Invoice.totalGross"
        },
        {
            "parameter": "totalnet",
            "type": "quantity",
            "field": "Invoice.totalNet"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Invoice.type"
        }
    ],
    "Library": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "Library.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "content-type",
            "type": "token",
            "field": "Library.content.contentType"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(Library.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(Library.useContext.value as Quantity)|(Library.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "Library.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "Library.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "Library.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Library.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "Library.relatedArtifact.where(type='depends-on').resource"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "Library.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "Library.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "Library.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Library.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "Library.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Library.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "Library.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "Library.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Library.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "Library.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "Library.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "Library.topic"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Library.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Library.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "Library.version"
        }
    ],
    "Linkage": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "Linkage.author"
        },
        {
            "parameter": "item",
            "type": "reference",
            "field": "Linkage.item.resource"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "Linkage.item.resource"
        }
    ],
    "List": [
        {
            "parameter": "code",
            "type": "token",
            "field": "List.code"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "List.date"
        },
        {
            "parameter": "empty-reason",
            "type": "token",
            "field": "List.emptyReason"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "List.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "List.identifier"
        },
        {
            "parameter": "item",
            "type": "reference",
            "field": "List.entry.item"
        },
        {
            "parameter": "notes",
            "type": "string",
            "field": "List.note.text"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "List.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "List.source"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "List.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "List.subject"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "List.title"
        }
    ],
    "Location": [
        {
            "parameter": "address",
            "type": "string",
            "field": "Location.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "Location.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "Location.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "Location.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "Location.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "Location.address.use"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "Location.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Location.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Location.name|Location.alias"
        },
        {
            "parameter": "near",
            "type": "special",
            "field": "Location.position"
        },
        {
            "parameter": "operational-status",
            "type": "token",
            "field": "Location.operationalStatus"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Location.managingOrganization"
        },
        {
            "parameter": "partof",
            "type": "reference",
            "field": "Location.partOf"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Location.status"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Location.type"
        }
    ],
    "Measure": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "Measure.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(Measure.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(Measure.useContext.value as Quantity)|(Measure.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "Measure.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "Measure.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "Measure.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Measure.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "Measure.relatedArtifact.where(type='depends-on').resource|Measure.library"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "Measure.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "Measure.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "Measure.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Measure.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "Measure.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Measure.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "Measure.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "Measure.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Measure.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "Measure.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "Measure.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "Measure.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Measure.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "Measure.version"
        }
    ],
    "MeasureReport": [
        {
            "parameter": "date",
            "type": "date",
            "field": "MeasureReport.date"
        },
        {
            "parameter": "evaluated-resource",
            "type": "reference",
            "field": "MeasureReport.evaluatedResource"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MeasureReport.identifier"
        },
        {
            "parameter": "measure",
            "type": "reference",
            "field": "MeasureReport.measure"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MeasureReport.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "MeasureReport.period"
        },
        {
            "parameter": "reporter",
            "type": "reference",
            "field": "MeasureReport.reporter"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MeasureReport.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MeasureReport.subject"
        }
    ],
    "Media": [
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Media.basedOn"
        },
        {
            "parameter": "created",
            "type": "date",
            "field": "Media.created"
        },
        {
            "parameter": "device",
            "type": "reference",
            "field": "Media.device"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Media.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Media.identifier"
        },
        {
            "parameter": "modality",
            "type": "token",
            "field": "Media.modality"
        },
        {
            "parameter": "operator",
            "type": "reference",
            "field": "Media.operator"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Media.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "site",
            "type": "token",
            "field": "Media.bodySite"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Media.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Media.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Media.type"
        },
        {
            "parameter": "view",
            "type": "token",
            "field": "Media.view"
        }
    ],
    "Medication": [
        {
            "parameter": "code",
            "type": "token",
            "field": "Medication.code"
        },
        {
            "parameter": "expiration-date",
            "type": "date",
            "field": "Medication.batch.expirationDate"
        },
        {
            "parameter": "form",
            "type": "token",
            "field": "Medication.form"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Medication.identifier"
        },
        {
            "parameter": "ingredient",
            "type": "reference",
            "field": "(Medication.ingredient.item as Reference)"
        },
        {
            "parameter": "ingredient-code",
            "type": "token",
            "field": "(Medication.ingredient.item as CodeableConcept)"
        },
        {
            "parameter": "lot-number",
            "type": "token",
            "field": "Medication.batch.lotNumber"
        },
        {
            "parameter": "manufacturer",
            "type": "reference",
            "field": "Medication.manufacturer"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Medication.status"
        }
    ],
    "MedicationDispense": [
        {
            "parameter": "code",
            "type": "token",
            "field": "(MedicationDispense.medication as CodeableConcept)"
        },
        {
            "parameter": "context",
            "type": "reference",
            "field": "MedicationDispense.context"
        },
        {
            "parameter": "destination",
            "type": "reference",
            "field": "MedicationDispense.destination"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicationDispense.identifier"
        },
        {
            "parameter": "medication",
            "type": "reference",
            "field": "(MedicationDispense.medication as Reference)"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MedicationDispense.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "MedicationDispense.performer.actor"
        },
        {
            "parameter": "prescription",
            "type": "reference",
            "field": "MedicationDispense.authorizingPrescription"
        },
        {
            "parameter": "receiver",
            "type": "reference",
            "field": "MedicationDispense.receiver"
        },
        {
            "parameter": "responsibleparty",
            "type": "reference",
            "field": "MedicationDispense.substitution.responsibleParty"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicationDispense.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicationDispense.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "MedicationDispense.type"
        },
        {
            "parameter": "whenhandedover",
            "type": "date",
            "field": "MedicationDispense.whenHandedOver"
        },
        {
            "parameter": "whenprepared",
            "type": "date",
            "field": "MedicationDispense.whenPrepared"
        }
    ],
    "MedicationKnowledge": [
        {
            "parameter": "classification",
            "type": "token",
            "field": "MedicationKnowledge.medicineClassification.classification"
        },
        {
            "parameter": "classification-type",
            "type": "token",
            "field": "MedicationKnowledge.medicineClassification.type"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "MedicationKnowledge.code"
        },
        {
            "parameter": "doseform",
            "type": "token",
            "field": "MedicationKnowledge.doseForm"
        },
        {
            "parameter": "ingredient",
            "type": "reference",
            "field": "(MedicationKnowledge.ingredient.item as Reference)"
        },
        {
            "parameter": "ingredient-code",
            "type": "token",
            "field": "(MedicationKnowledge.ingredient.item as CodeableConcept)"
        },
        {
            "parameter": "manufacturer",
            "type": "reference",
            "field": "MedicationKnowledge.manufacturer"
        },
        {
            "parameter": "monitoring-program-name",
            "type": "token",
            "field": "MedicationKnowledge.monitoringProgram.name"
        },
        {
            "parameter": "monitoring-program-type",
            "type": "token",
            "field": "MedicationKnowledge.monitoringProgram.type"
        },
        {
            "parameter": "monograph",
            "type": "reference",
            "field": "MedicationKnowledge.monograph.source"
        },
        {
            "parameter": "monograph-type",
            "type": "token",
            "field": "MedicationKnowledge.monograph.type"
        },
        {
            "parameter": "source-cost",
            "type": "token",
            "field": "MedicationKnowledge.cost.source"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicationKnowledge.status"
        }
    ],
    "MedicationRequest": [
        {
            "parameter": "authoredon",
            "type": "date",
            "field": "MedicationRequest.authoredOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "MedicationRequest.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "(MedicationRequest.medication as CodeableConcept)"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "MedicationRequest.dosageInstruction.timing.event"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "MedicationRequest.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicationRequest.identifier"
        },
        {
            "parameter": "intended-dispenser",
            "type": "reference",
            "field": "MedicationRequest.dispenseRequest.performer"
        },
        {
            "parameter": "intended-performer",
            "type": "reference",
            "field": "MedicationRequest.performer"
        },
        {
            "parameter": "intended-performertype",
            "type": "token",
            "field": "MedicationRequest.performerType"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "MedicationRequest.intent"
        },
        {
            "parameter": "medication",
            "type": "reference",
            "field": "(MedicationRequest.medication as Reference)"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MedicationRequest.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "MedicationRequest.priority"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "MedicationRequest.requester"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicationRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicationRequest.subject"
        }
    ],
    "MedicationStatement": [
        {
            "parameter": "category",
            "type": "token",
            "field": "MedicationStatement.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "(MedicationStatement.medication as CodeableConcept)"
        },
        {
            "parameter": "context",
            "type": "reference",
            "field": "MedicationStatement.context"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "MedicationStatement.effective"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicationStatement.identifier"
        },
        {
            "parameter": "medication",
            "type": "reference",
            "field": "(MedicationStatement.medication as Reference)"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "MedicationStatement.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MedicationStatement.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "MedicationStatement.informationSource"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicationStatement.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicationStatement.subject"
        }
    ],
    "MedicinalProduct": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicinalProduct.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "MedicinalProduct.name.productName"
        },
        {
            "parameter": "name-language",
            "type": "token",
            "field": "MedicinalProduct.name.countryLanguage.language"
        }
    ],
    "MedicinalProductAuthorization": [
        {
            "parameter": "country",
            "type": "token",
            "field": "MedicinalProductAuthorization.country"
        },
        {
            "parameter": "holder",
            "type": "reference",
            "field": "MedicinalProductAuthorization.holder"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicinalProductAuthorization.identifier"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MedicinalProductAuthorization.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductAuthorization.subject"
        }
    ],
    "MedicinalProductContraindication": [
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductContraindication.subject"
        }
    ],
    "MedicinalProductIndication": [
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductIndication.subject"
        }
    ],
    "MedicinalProductInteraction": [
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductInteraction.subject"
        }
    ],
    "MedicinalProductPackaged": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicinalProductPackaged.identifier"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductPackaged.subject"
        }
    ],
    "MedicinalProductPharmaceutical": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MedicinalProductPharmaceutical.identifier"
        },
        {
            "parameter": "route",
            "type": "token",
            "field": "MedicinalProductPharmaceutical.routeOfAdministration.code"
        },
        {
            "parameter": "target-species",
            "type": "token",
            "field": "MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.code"
        }
    ],
    "MedicinalProductUndesirableEffect": [
        {
            "parameter": "subject",
            "type": "reference",
            "field": "MedicinalProductUndesirableEffect.subject"
        }
    ],
    "MessageDefinition": [
        {
            "parameter": "category",
            "type": "token",
            "field": "MessageDefinition.category"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(MessageDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(MessageDefinition.useContext.value as Quantity)|(MessageDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "MessageDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "MessageDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "MessageDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "MessageDefinition.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "MessageDefinition.description"
        },
        {
            "parameter": "event",
            "type": "token",
            "field": "MessageDefinition.event"
        },
        {
            "parameter": "focus",
            "type": "token",
            "field": "MessageDefinition.focus.code"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MessageDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "MessageDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "MessageDefinition.name"
        },
        {
            "parameter": "parent",
            "type": "reference",
            "field": "MessageDefinition.parent"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "MessageDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "MessageDefinition.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "MessageDefinition.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "MessageDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "MessageDefinition.version"
        }
    ],
    "MessageHeader": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "MessageHeader.author"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "MessageHeader.response.code"
        },
        {
            "parameter": "destination",
            "type": "string",
            "field": "MessageHeader.destination.name"
        },
        {
            "parameter": "destination-uri",
            "type": "uri",
            "field": "MessageHeader.destination.endpoint"
        },
        {
            "parameter": "enterer",
            "type": "reference",
            "field": "MessageHeader.enterer"
        },
        {
            "parameter": "event",
            "type": "token",
            "field": "MessageHeader.event"
        },
        {
            "parameter": "focus",
            "type": "reference",
            "field": "MessageHeader.focus"
        },
        {
            "parameter": "receiver",
            "type": "reference",
            "field": "MessageHeader.destination.receiver"
        },
        {
            "parameter": "response-id",
            "type": "token",
            "field": "MessageHeader.response.identifier"
        },
        {
            "parameter": "responsible",
            "type": "reference",
            "field": "MessageHeader.responsible"
        },
        {
            "parameter": "sender",
            "type": "reference",
            "field": "MessageHeader.sender"
        },
        {
            "parameter": "source",
            "type": "string",
            "field": "MessageHeader.source.name"
        },
        {
            "parameter": "source-uri",
            "type": "uri",
            "field": "MessageHeader.source.endpoint"
        },
        {
            "parameter": "target",
            "type": "reference",
            "field": "MessageHeader.destination.target"
        }
    ],
    "MolecularSequence": [
        {
            "parameter": "chromosome",
            "type": "token",
            "field": "MolecularSequence.referenceSeq.chromosome"
        },
        {
            "parameter": "chromosome-variant-coordinate",
            "type": "composite",
            "field": "MolecularSequence.variant"
        },
        {
            "parameter": "chromosome-window-coordinate",
            "type": "composite",
            "field": "MolecularSequence.referenceSeq"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "MolecularSequence.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "MolecularSequence.patient"
        },
        {
            "parameter": "referenceseqid",
            "type": "token",
            "field": "MolecularSequence.referenceSeq.referenceSeqId"
        },
        {
            "parameter": "referenceseqid-variant-coordinate",
            "type": "composite",
            "field": "MolecularSequence.variant"
        },
        {
            "parameter": "referenceseqid-window-coordinate",
            "type": "composite",
            "field": "MolecularSequence.referenceSeq"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "MolecularSequence.type"
        },
        {
            "parameter": "variant-end",
            "type": "number",
            "field": "MolecularSequence.variant.end"
        },
        {
            "parameter": "variant-start",
            "type": "number",
            "field": "MolecularSequence.variant.start"
        },
        {
            "parameter": "window-end",
            "type": "number",
            "field": "MolecularSequence.referenceSeq.windowEnd"
        },
        {
            "parameter": "window-start",
            "type": "number",
            "field": "MolecularSequence.referenceSeq.windowStart"
        }
    ],
    "NamingSystem": [
        {
            "parameter": "contact",
            "type": "string",
            "field": "NamingSystem.contact.name"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(NamingSystem.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(NamingSystem.useContext.value as Quantity)|(NamingSystem.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "NamingSystem.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "NamingSystem.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "NamingSystem.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "NamingSystem.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "NamingSystem.description"
        },
        {
            "parameter": "id-type",
            "type": "token",
            "field": "NamingSystem.uniqueId.type"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "NamingSystem.jurisdiction"
        },
        {
            "parameter": "kind",
            "type": "token",
            "field": "NamingSystem.kind"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "NamingSystem.name"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "NamingSystem.uniqueId.period"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "NamingSystem.publisher"
        },
        {
            "parameter": "responsible",
            "type": "string",
            "field": "NamingSystem.responsible"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "NamingSystem.status"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "NamingSystem.contact.telecom"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "NamingSystem.type"
        },
        {
            "parameter": "value",
            "type": "string",
            "field": "NamingSystem.uniqueId.value"
        }
    ],
    "NutritionOrder": [
        {
            "parameter": "additive",
            "type": "token",
            "field": "NutritionOrder.enteralFormula.additiveType"
        },
        {
            "parameter": "datetime",
            "type": "date",
            "field": "NutritionOrder.dateTime"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "NutritionOrder.encounter"
        },
        {
            "parameter": "formula",
            "type": "token",
            "field": "NutritionOrder.enteralFormula.baseFormulaType"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "NutritionOrder.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "NutritionOrder.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "NutritionOrder.instantiatesUri"
        },
        {
            "parameter": "oraldiet",
            "type": "token",
            "field": "NutritionOrder.oralDiet.type"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "NutritionOrder.patient"
        },
        {
            "parameter": "provider",
            "type": "reference",
            "field": "NutritionOrder.orderer"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "NutritionOrder.status"
        },
        {
            "parameter": "supplement",
            "type": "token",
            "field": "NutritionOrder.supplement.type"
        }
    ],
    "Observation": [
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Observation.basedOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Observation.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Observation.code"
        },
        {
            "parameter": "code-value-concept",
            "type": "composite",
            "field": "Observation"
        },
        {
            "parameter": "code-value-date",
            "type": "composite",
            "field": "Observation"
        },
        {
            "parameter": "code-value-quantity",
            "type": "composite",
            "field": "Observation"
        },
        {
            "parameter": "code-value-string",
            "type": "composite",
            "field": "Observation"
        },
        {
            "parameter": "combo-code",
            "type": "token",
            "field": "Observation.code|Observation.component.code"
        },
        {
            "parameter": "combo-data-absent-reason",
            "type": "token",
            "field": "Observation.dataAbsentReason|Observation.component.dataAbsentReason"
        },
        {
            "parameter": "combo-value-concept",
            "type": "token",
            "field": "(Observation.value as CodeableConcept)|(Observation.component.value as CodeableConcept)"
        },
        {
            "parameter": "combo-value-quantity",
            "type": "quantity",
            "field": "(Observation.value as Quantity)|(Observation.value as SampledData)|(Observation.component.value as Quantity)|(Observation.component.value as SampledData)"
        },
        {
            "parameter": "component-code",
            "type": "token",
            "field": "Observation.component.code"
        },
        {
            "parameter": "component-code-value-concept",
            "type": "composite",
            "field": "Observation.component"
        },
        {
            "parameter": "component-code-value-quantity",
            "type": "composite",
            "field": "Observation.component"
        },
        {
            "parameter": "component-data-absent-reason",
            "type": "token",
            "field": "Observation.component.dataAbsentReason"
        },
        {
            "parameter": "component-value-concept",
            "type": "token",
            "field": "(Observation.component.value as CodeableConcept)"
        },
        {
            "parameter": "component-value-quantity",
            "type": "quantity",
            "field": "(Observation.component.value as Quantity)|(Observation.component.value as SampledData)"
        },
        {
            "parameter": "data-absent-reason",
            "type": "token",
            "field": "Observation.dataAbsentReason"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Observation.effective"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "Observation.derivedFrom"
        },
        {
            "parameter": "device",
            "type": "reference",
            "field": "Observation.device"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Observation.encounter"
        },
        {
            "parameter": "focus",
            "type": "reference",
            "field": "Observation.focus"
        },
        {
            "parameter": "has-member",
            "type": "reference",
            "field": "Observation.hasMember"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Observation.identifier"
        },
        {
            "parameter": "method",
            "type": "token",
            "field": "Observation.method"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "Observation.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Observation.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "Observation.performer"
        },
        {
            "parameter": "specimen",
            "type": "reference",
            "field": "Observation.specimen"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Observation.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Observation.subject"
        },
        {
            "parameter": "value-concept",
            "type": "token",
            "field": "(Observation.value as CodeableConcept)"
        },
        {
            "parameter": "value-date",
            "type": "date",
            "field": "(Observation.value as dateTime)|(Observation.value as Period)"
        },
        {
            "parameter": "value-quantity",
            "type": "quantity",
            "field": "(Observation.value as Quantity)|(Observation.value as SampledData)"
        },
        {
            "parameter": "value-string",
            "type": "string",
            "field": "(Observation.value as string)|(Observation.value as CodeableConcept).text"
        }
    ],
    "Observation | Observation": [
        {
            "parameter": "combo-code-value-concept",
            "type": "composite",
            "field": ""
        },
        {
            "parameter": "combo-code-value-quantity",
            "type": "composite",
            "field": ""
        }
    ],
    "OperationDefinition": [
        {
            "parameter": "base",
            "type": "reference",
            "field": "OperationDefinition.base"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "OperationDefinition.code"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(OperationDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(OperationDefinition.useContext.value as Quantity)|(OperationDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "OperationDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "OperationDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "OperationDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "OperationDefinition.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "OperationDefinition.description"
        },
        {
            "parameter": "input-profile",
            "type": "reference",
            "field": "OperationDefinition.inputProfile"
        },
        {
            "parameter": "instance",
            "type": "token",
            "field": "OperationDefinition.instance"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "OperationDefinition.jurisdiction"
        },
        {
            "parameter": "kind",
            "type": "token",
            "field": "OperationDefinition.kind"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "OperationDefinition.name"
        },
        {
            "parameter": "output-profile",
            "type": "reference",
            "field": "OperationDefinition.outputProfile"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "OperationDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "OperationDefinition.status"
        },
        {
            "parameter": "system",
            "type": "token",
            "field": "OperationDefinition.system"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "OperationDefinition.title"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "OperationDefinition.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "OperationDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "OperationDefinition.version"
        }
    ],
    "Organization": [
        {
            "parameter": "active",
            "type": "token",
            "field": "Organization.active"
        },
        {
            "parameter": "address",
            "type": "string",
            "field": "Organization.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "Organization.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "Organization.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "Organization.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "Organization.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "Organization.address.use"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "Organization.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Organization.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Organization.name|Organization.alias"
        },
        {
            "parameter": "partof",
            "type": "reference",
            "field": "Organization.partOf"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "Organization.name"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Organization.type"
        }
    ],
    "OrganizationAffiliation": [
        {
            "parameter": "active",
            "type": "token",
            "field": "OrganizationAffiliation.active"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "OrganizationAffiliation.period"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "OrganizationAffiliation.telecom.where(system='email')"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "OrganizationAffiliation.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "OrganizationAffiliation.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "OrganizationAffiliation.location"
        },
        {
            "parameter": "network",
            "type": "reference",
            "field": "OrganizationAffiliation.network"
        },
        {
            "parameter": "participating-organization",
            "type": "reference",
            "field": "OrganizationAffiliation.participatingOrganization"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "OrganizationAffiliation.telecom.where(system='phone')"
        },
        {
            "parameter": "primary-organization",
            "type": "reference",
            "field": "OrganizationAffiliation.organization"
        },
        {
            "parameter": "role",
            "type": "token",
            "field": "OrganizationAffiliation.code"
        },
        {
            "parameter": "service",
            "type": "reference",
            "field": "OrganizationAffiliation.healthcareService"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "OrganizationAffiliation.specialty"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "OrganizationAffiliation.telecom"
        }
    ],
    "PaymentNotice": [
        {
            "parameter": "created",
            "type": "date",
            "field": "PaymentNotice.created"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "PaymentNotice.identifier"
        },
        {
            "parameter": "payment-status",
            "type": "token",
            "field": "PaymentNotice.paymentStatus"
        },
        {
            "parameter": "provider",
            "type": "reference",
            "field": "PaymentNotice.provider"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "PaymentNotice.request"
        },
        {
            "parameter": "response",
            "type": "reference",
            "field": "PaymentNotice.response"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "PaymentNotice.status"
        }
    ],
    "PaymentReconciliation": [
        {
            "parameter": "created",
            "type": "date",
            "field": "PaymentReconciliation.created"
        },
        {
            "parameter": "disposition",
            "type": "string",
            "field": "PaymentReconciliation.disposition"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "PaymentReconciliation.identifier"
        },
        {
            "parameter": "outcome",
            "type": "token",
            "field": "PaymentReconciliation.outcome"
        },
        {
            "parameter": "payment-issuer",
            "type": "reference",
            "field": "PaymentReconciliation.paymentIssuer"
        },
        {
            "parameter": "request",
            "type": "reference",
            "field": "PaymentReconciliation.request"
        },
        {
            "parameter": "requestor",
            "type": "reference",
            "field": "PaymentReconciliation.requestor"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "PaymentReconciliation.status"
        }
    ],
    "Person": [
        {
            "parameter": "address",
            "type": "string",
            "field": "Person.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "Person.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "Person.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "Person.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "Person.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "Person.address.use"
        },
        {
            "parameter": "birthdate",
            "type": "date",
            "field": "Person.birthDate"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "Person.telecom.where(system='email')"
        },
        {
            "parameter": "gender",
            "type": "token",
            "field": "Person.gender"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Person.identifier"
        },
        {
            "parameter": "link",
            "type": "reference",
            "field": "Person.link.target"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Person.name"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "Person.managingOrganization"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Person.link.target.where(resolve() is Patient)"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "Person.telecom.where(system='phone')"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "Person.name"
        },
        {
            "parameter": "practitioner",
            "type": "reference",
            "field": "Person.link.target.where(resolve() is Practitioner)"
        },
        {
            "parameter": "relatedperson",
            "type": "reference",
            "field": "Person.link.target.where(resolve() is RelatedPerson)"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "Person.telecom"
        }
    ],
    "PlanDefinition": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "PlanDefinition.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(PlanDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(PlanDefinition.useContext.value as Quantity)|(PlanDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "PlanDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "PlanDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "PlanDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "PlanDefinition.date"
        },
        {
            "parameter": "definition",
            "type": "reference",
            "field": "PlanDefinition.action.definition"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "PlanDefinition.relatedArtifact.where(type='depends-on').resource|PlanDefinition.library"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "PlanDefinition.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "PlanDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "PlanDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "PlanDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "PlanDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "PlanDefinition.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "PlanDefinition.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "PlanDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "PlanDefinition.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "PlanDefinition.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "PlanDefinition.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "PlanDefinition.topic"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "PlanDefinition.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "PlanDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "PlanDefinition.version"
        }
    ],
    "Practitioner": [
        {
            "parameter": "active",
            "type": "token",
            "field": "Practitioner.active"
        },
        {
            "parameter": "address",
            "type": "string",
            "field": "Practitioner.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "Practitioner.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "Practitioner.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "Practitioner.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "Practitioner.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "Practitioner.address.use"
        },
        {
            "parameter": "communication",
            "type": "token",
            "field": "Practitioner.communication"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "Practitioner.telecom.where(system='email')"
        },
        {
            "parameter": "family",
            "type": "string",
            "field": "Practitioner.name.family"
        },
        {
            "parameter": "gender",
            "type": "token",
            "field": "Practitioner.gender"
        },
        {
            "parameter": "given",
            "type": "string",
            "field": "Practitioner.name.given"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Practitioner.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Practitioner.name"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "Practitioner.telecom.where(system='phone')"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "Practitioner.name"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "Practitioner.telecom"
        }
    ],
    "PractitionerRole": [
        {
            "parameter": "active",
            "type": "token",
            "field": "PractitionerRole.active"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "PractitionerRole.period"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "PractitionerRole.telecom.where(system='email')"
        },
        {
            "parameter": "endpoint",
            "type": "reference",
            "field": "PractitionerRole.endpoint"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "PractitionerRole.identifier"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "PractitionerRole.location"
        },
        {
            "parameter": "organization",
            "type": "reference",
            "field": "PractitionerRole.organization"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "PractitionerRole.telecom.where(system='phone')"
        },
        {
            "parameter": "practitioner",
            "type": "reference",
            "field": "PractitionerRole.practitioner"
        },
        {
            "parameter": "role",
            "type": "token",
            "field": "PractitionerRole.code"
        },
        {
            "parameter": "service",
            "type": "reference",
            "field": "PractitionerRole.healthcareService"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "PractitionerRole.specialty"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "PractitionerRole.telecom"
        }
    ],
    "Procedure": [
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Procedure.basedOn"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "Procedure.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Procedure.code"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Procedure.performed"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Procedure.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Procedure.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "Procedure.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "Procedure.instantiatesUri"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Procedure.location"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "Procedure.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Procedure.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "Procedure.performer.actor"
        },
        {
            "parameter": "reason-code",
            "type": "token",
            "field": "Procedure.reasonCode"
        },
        {
            "parameter": "reason-reference",
            "type": "reference",
            "field": "Procedure.reasonReference"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Procedure.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Procedure.subject"
        }
    ],
    "Provenance": [
        {
            "parameter": "agent",
            "type": "reference",
            "field": "Provenance.agent.who"
        },
        {
            "parameter": "agent-role",
            "type": "token",
            "field": "Provenance.agent.role"
        },
        {
            "parameter": "agent-type",
            "type": "token",
            "field": "Provenance.agent.type"
        },
        {
            "parameter": "entity",
            "type": "reference",
            "field": "Provenance.entity.what"
        },
        {
            "parameter": "location",
            "type": "reference",
            "field": "Provenance.location"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Provenance.target.where(resolve() is Patient)"
        },
        {
            "parameter": "recorded",
            "type": "date",
            "field": "Provenance.recorded"
        },
        {
            "parameter": "signature-type",
            "type": "token",
            "field": "Provenance.signature.type"
        },
        {
            "parameter": "target",
            "type": "reference",
            "field": "Provenance.target"
        },
        {
            "parameter": "when",
            "type": "date",
            "field": "(Provenance.occurred as dateTime)"
        }
    ],
    "Questionnaire": [
        {
            "parameter": "code",
            "type": "token",
            "field": "Questionnaire.item.code"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(Questionnaire.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(Questionnaire.useContext.value as Quantity)|(Questionnaire.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "Questionnaire.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "Questionnaire.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "Questionnaire.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Questionnaire.date"
        },
        {
            "parameter": "definition",
            "type": "uri",
            "field": "Questionnaire.item.definition"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "Questionnaire.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "Questionnaire.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Questionnaire.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "Questionnaire.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "Questionnaire.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "Questionnaire.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Questionnaire.status"
        },
        {
            "parameter": "subject-type",
            "type": "token",
            "field": "Questionnaire.subjectType"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "Questionnaire.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Questionnaire.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "Questionnaire.version"
        }
    ],
    "QuestionnaireResponse": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "QuestionnaireResponse.author"
        },
        {
            "parameter": "authored",
            "type": "date",
            "field": "QuestionnaireResponse.authored"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "QuestionnaireResponse.basedOn"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "QuestionnaireResponse.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "QuestionnaireResponse.identifier"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "QuestionnaireResponse.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "QuestionnaireResponse.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "questionnaire",
            "type": "reference",
            "field": "QuestionnaireResponse.questionnaire"
        },
        {
            "parameter": "source",
            "type": "reference",
            "field": "QuestionnaireResponse.source"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "QuestionnaireResponse.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "QuestionnaireResponse.subject"
        }
    ],
    "RelatedPerson": [
        {
            "parameter": "active",
            "type": "token",
            "field": "RelatedPerson.active"
        },
        {
            "parameter": "address",
            "type": "string",
            "field": "RelatedPerson.address"
        },
        {
            "parameter": "address-city",
            "type": "string",
            "field": "RelatedPerson.address.city"
        },
        {
            "parameter": "address-country",
            "type": "string",
            "field": "RelatedPerson.address.country"
        },
        {
            "parameter": "address-postalcode",
            "type": "string",
            "field": "RelatedPerson.address.postalCode"
        },
        {
            "parameter": "address-state",
            "type": "string",
            "field": "RelatedPerson.address.state"
        },
        {
            "parameter": "address-use",
            "type": "token",
            "field": "RelatedPerson.address.use"
        },
        {
            "parameter": "birthdate",
            "type": "date",
            "field": "RelatedPerson.birthDate"
        },
        {
            "parameter": "email",
            "type": "token",
            "field": "RelatedPerson.telecom.where(system='email')"
        },
        {
            "parameter": "gender",
            "type": "token",
            "field": "RelatedPerson.gender"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "RelatedPerson.identifier"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "RelatedPerson.name"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "RelatedPerson.patient"
        },
        {
            "parameter": "phone",
            "type": "token",
            "field": "RelatedPerson.telecom.where(system='phone')"
        },
        {
            "parameter": "phonetic",
            "type": "string",
            "field": "RelatedPerson.name"
        },
        {
            "parameter": "relationship",
            "type": "token",
            "field": "RelatedPerson.relationship"
        },
        {
            "parameter": "telecom",
            "type": "token",
            "field": "RelatedPerson.telecom"
        }
    ],
    "RequestGroup": [
        {
            "parameter": "author",
            "type": "reference",
            "field": "RequestGroup.author"
        },
        {
            "parameter": "authored",
            "type": "date",
            "field": "RequestGroup.authoredOn"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "RequestGroup.code"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "RequestGroup.encounter"
        },
        {
            "parameter": "group-identifier",
            "type": "token",
            "field": "RequestGroup.groupIdentifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "RequestGroup.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "RequestGroup.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "RequestGroup.instantiatesUri"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "RequestGroup.intent"
        },
        {
            "parameter": "participant",
            "type": "reference",
            "field": "RequestGroup.action.participant"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "RequestGroup.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "RequestGroup.priority"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "RequestGroup.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "RequestGroup.subject"
        }
    ],
    "ResearchDefinition": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "ResearchDefinition.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(ResearchDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ResearchDefinition.useContext.value as Quantity)|(ResearchDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ResearchDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ResearchDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ResearchDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ResearchDefinition.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "ResearchDefinition.relatedArtifact.where(type='depends-on').resource|ResearchDefinition.library"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "ResearchDefinition.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ResearchDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "ResearchDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ResearchDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ResearchDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ResearchDefinition.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "ResearchDefinition.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ResearchDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ResearchDefinition.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "ResearchDefinition.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ResearchDefinition.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "ResearchDefinition.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ResearchDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ResearchDefinition.version"
        }
    ],
    "ResearchElementDefinition": [
        {
            "parameter": "composed-of",
            "type": "reference",
            "field": "ResearchElementDefinition.relatedArtifact.where(type='composed-of').resource"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(ResearchElementDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ResearchElementDefinition.useContext.value as Quantity)|(ResearchElementDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ResearchElementDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ResearchElementDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ResearchElementDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ResearchElementDefinition.date"
        },
        {
            "parameter": "depends-on",
            "type": "reference",
            "field": "ResearchElementDefinition.relatedArtifact.where(type='depends-on').resource|ResearchElementDefinition.library"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "ResearchElementDefinition.relatedArtifact.where(type='derived-from').resource"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ResearchElementDefinition.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "ResearchElementDefinition.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ResearchElementDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ResearchElementDefinition.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ResearchElementDefinition.name"
        },
        {
            "parameter": "predecessor",
            "type": "reference",
            "field": "ResearchElementDefinition.relatedArtifact.where(type='predecessor').resource"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ResearchElementDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ResearchElementDefinition.status"
        },
        {
            "parameter": "successor",
            "type": "reference",
            "field": "ResearchElementDefinition.relatedArtifact.where(type='successor').resource"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ResearchElementDefinition.title"
        },
        {
            "parameter": "topic",
            "type": "token",
            "field": "ResearchElementDefinition.topic"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ResearchElementDefinition.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ResearchElementDefinition.version"
        }
    ],
    "ResearchStudy": [
        {
            "parameter": "category",
            "type": "token",
            "field": "ResearchStudy.category"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ResearchStudy.period"
        },
        {
            "parameter": "focus",
            "type": "token",
            "field": "ResearchStudy.focus"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ResearchStudy.identifier"
        },
        {
            "parameter": "keyword",
            "type": "token",
            "field": "ResearchStudy.keyword"
        },
        {
            "parameter": "location",
            "type": "token",
            "field": "ResearchStudy.location"
        },
        {
            "parameter": "partof",
            "type": "reference",
            "field": "ResearchStudy.partOf"
        },
        {
            "parameter": "principalinvestigator",
            "type": "reference",
            "field": "ResearchStudy.principalInvestigator"
        },
        {
            "parameter": "protocol",
            "type": "reference",
            "field": "ResearchStudy.protocol"
        },
        {
            "parameter": "site",
            "type": "reference",
            "field": "ResearchStudy.site"
        },
        {
            "parameter": "sponsor",
            "type": "reference",
            "field": "ResearchStudy.sponsor"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ResearchStudy.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ResearchStudy.title"
        }
    ],
    "ResearchSubject": [
        {
            "parameter": "date",
            "type": "date",
            "field": "ResearchSubject.period"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ResearchSubject.identifier"
        },
        {
            "parameter": "individual",
            "type": "reference",
            "field": "ResearchSubject.individual"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ResearchSubject.individual"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ResearchSubject.status"
        },
        {
            "parameter": "study",
            "type": "reference",
            "field": "ResearchSubject.study"
        }
    ],
    "RiskAssessment": [
        {
            "parameter": "condition",
            "type": "reference",
            "field": "RiskAssessment.condition"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "(RiskAssessment.occurrence as dateTime)"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "RiskAssessment.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "RiskAssessment.identifier"
        },
        {
            "parameter": "method",
            "type": "token",
            "field": "RiskAssessment.method"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "RiskAssessment.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "RiskAssessment.performer"
        },
        {
            "parameter": "probability",
            "type": "number",
            "field": "RiskAssessment.prediction.probability"
        },
        {
            "parameter": "risk",
            "type": "token",
            "field": "RiskAssessment.prediction.qualitativeRisk"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "RiskAssessment.subject"
        }
    ],
    "RiskEvidenceSynthesis": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(RiskEvidenceSynthesis.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(RiskEvidenceSynthesis.useContext.value as Quantity)|(RiskEvidenceSynthesis.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "RiskEvidenceSynthesis.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "RiskEvidenceSynthesis.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "RiskEvidenceSynthesis.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "RiskEvidenceSynthesis.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "RiskEvidenceSynthesis.description"
        },
        {
            "parameter": "effective",
            "type": "date",
            "field": "RiskEvidenceSynthesis.effectivePeriod"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "RiskEvidenceSynthesis.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "RiskEvidenceSynthesis.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "RiskEvidenceSynthesis.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "RiskEvidenceSynthesis.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "RiskEvidenceSynthesis.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "RiskEvidenceSynthesis.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "RiskEvidenceSynthesis.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "RiskEvidenceSynthesis.version"
        }
    ],
    "Schedule": [
        {
            "parameter": "active",
            "type": "token",
            "field": "Schedule.active"
        },
        {
            "parameter": "actor",
            "type": "reference",
            "field": "Schedule.actor"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "Schedule.planningHorizon"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Schedule.identifier"
        },
        {
            "parameter": "service-category",
            "type": "token",
            "field": "Schedule.serviceCategory"
        },
        {
            "parameter": "service-type",
            "type": "token",
            "field": "Schedule.serviceType"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "Schedule.specialty"
        }
    ],
    "SearchParameter": [
        {
            "parameter": "base",
            "type": "token",
            "field": "SearchParameter.base"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "SearchParameter.code"
        },
        {
            "parameter": "component",
            "type": "reference",
            "field": "SearchParameter.component.definition"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(SearchParameter.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(SearchParameter.useContext.value as Quantity)|(SearchParameter.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "SearchParameter.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "SearchParameter.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "SearchParameter.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "SearchParameter.date"
        },
        {
            "parameter": "derived-from",
            "type": "reference",
            "field": "SearchParameter.derivedFrom"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "SearchParameter.description"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "SearchParameter.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "SearchParameter.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "SearchParameter.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "SearchParameter.status"
        },
        {
            "parameter": "target",
            "type": "token",
            "field": "SearchParameter.target"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "SearchParameter.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "SearchParameter.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "SearchParameter.version"
        }
    ],
    "ServiceRequest": [
        {
            "parameter": "authored",
            "type": "date",
            "field": "ServiceRequest.authoredOn"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "ServiceRequest.basedOn"
        },
        {
            "parameter": "body-site",
            "type": "token",
            "field": "ServiceRequest.bodySite"
        },
        {
            "parameter": "category",
            "type": "token",
            "field": "ServiceRequest.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "ServiceRequest.code"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "ServiceRequest.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ServiceRequest.identifier"
        },
        {
            "parameter": "instantiates-canonical",
            "type": "reference",
            "field": "ServiceRequest.instantiatesCanonical"
        },
        {
            "parameter": "instantiates-uri",
            "type": "uri",
            "field": "ServiceRequest.instantiatesUri"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "ServiceRequest.intent"
        },
        {
            "parameter": "occurrence",
            "type": "date",
            "field": "ServiceRequest.occurrence"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "ServiceRequest.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "reference",
            "field": "ServiceRequest.performer"
        },
        {
            "parameter": "performer-type",
            "type": "token",
            "field": "ServiceRequest.performerType"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "ServiceRequest.priority"
        },
        {
            "parameter": "replaces",
            "type": "reference",
            "field": "ServiceRequest.replaces"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "ServiceRequest.requester"
        },
        {
            "parameter": "requisition",
            "type": "token",
            "field": "ServiceRequest.requisition"
        },
        {
            "parameter": "specimen",
            "type": "reference",
            "field": "ServiceRequest.specimen"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ServiceRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "ServiceRequest.subject"
        }
    ],
    "Slot": [
        {
            "parameter": "appointment-type",
            "type": "token",
            "field": "Slot.appointmentType"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Slot.identifier"
        },
        {
            "parameter": "schedule",
            "type": "reference",
            "field": "Slot.schedule"
        },
        {
            "parameter": "service-category",
            "type": "token",
            "field": "Slot.serviceCategory"
        },
        {
            "parameter": "service-type",
            "type": "token",
            "field": "Slot.serviceType"
        },
        {
            "parameter": "specialty",
            "type": "token",
            "field": "Slot.specialty"
        },
        {
            "parameter": "start",
            "type": "date",
            "field": "Slot.start"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Slot.status"
        }
    ],
    "Specimen": [
        {
            "parameter": "accession",
            "type": "token",
            "field": "Specimen.accessionIdentifier"
        },
        {
            "parameter": "bodysite",
            "type": "token",
            "field": "Specimen.collection.bodySite"
        },
        {
            "parameter": "collected",
            "type": "date",
            "field": "Specimen.collection.collected"
        },
        {
            "parameter": "collector",
            "type": "reference",
            "field": "Specimen.collection.collector"
        },
        {
            "parameter": "container",
            "type": "token",
            "field": "Specimen.container.type"
        },
        {
            "parameter": "container-id",
            "type": "token",
            "field": "Specimen.container.identifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Specimen.identifier"
        },
        {
            "parameter": "parent",
            "type": "reference",
            "field": "Specimen.parent"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Specimen.subject.where(resolve() is Patient)"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Specimen.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Specimen.subject"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Specimen.type"
        }
    ],
    "SpecimenDefinition": [
        {
            "parameter": "container",
            "type": "token",
            "field": "SpecimenDefinition.typeTested.container.type"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "SpecimenDefinition.identifier"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "SpecimenDefinition.typeCollected"
        }
    ],
    "StructureDefinition": [
        {
            "parameter": "abstract",
            "type": "token",
            "field": "StructureDefinition.abstract"
        },
        {
            "parameter": "base",
            "type": "reference",
            "field": "StructureDefinition.baseDefinition"
        },
        {
            "parameter": "base-path",
            "type": "token",
            "field": "StructureDefinition.snapshot.element.base.path|StructureDefinition.differential.element.base.path"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(StructureDefinition.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(StructureDefinition.useContext.value as Quantity)|(StructureDefinition.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "StructureDefinition.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "StructureDefinition.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "StructureDefinition.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "StructureDefinition.date"
        },
        {
            "parameter": "derivation",
            "type": "token",
            "field": "StructureDefinition.derivation"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "StructureDefinition.description"
        },
        {
            "parameter": "experimental",
            "type": "token",
            "field": "StructureDefinition.experimental"
        },
        {
            "parameter": "ext-context",
            "type": "token",
            "field": "StructureDefinition.context.type"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "StructureDefinition.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "StructureDefinition.jurisdiction"
        },
        {
            "parameter": "keyword",
            "type": "token",
            "field": "StructureDefinition.keyword"
        },
        {
            "parameter": "kind",
            "type": "token",
            "field": "StructureDefinition.kind"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "StructureDefinition.name"
        },
        {
            "parameter": "path",
            "type": "token",
            "field": "StructureDefinition.snapshot.element.path|StructureDefinition.differential.element.path"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "StructureDefinition.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "StructureDefinition.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "StructureDefinition.title"
        },
        {
            "parameter": "type",
            "type": "uri",
            "field": "StructureDefinition.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "StructureDefinition.url"
        },
        {
            "parameter": "valueset",
            "type": "reference",
            "field": "StructureDefinition.snapshot.element.binding.valueSet"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "StructureDefinition.version"
        }
    ],
    "StructureMap": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(StructureMap.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(StructureMap.useContext.value as Quantity)|(StructureMap.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "StructureMap.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "StructureMap.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "StructureMap.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "StructureMap.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "StructureMap.description"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "StructureMap.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "StructureMap.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "StructureMap.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "StructureMap.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "StructureMap.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "StructureMap.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "StructureMap.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "StructureMap.version"
        }
    ],
    "Subscription": [
        {
            "parameter": "contact",
            "type": "token",
            "field": "Subscription.contact"
        },
        {
            "parameter": "criteria",
            "type": "string",
            "field": "Subscription.criteria"
        },
        {
            "parameter": "payload",
            "type": "token",
            "field": "Subscription.channel.payload"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Subscription.status"
        },
        {
            "parameter": "type",
            "type": "token",
            "field": "Subscription.channel.type"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "Subscription.channel.endpoint"
        }
    ],
    "Substance": [
        {
            "parameter": "category",
            "type": "token",
            "field": "Substance.category"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Substance.code|(Substance.ingredient.substance as CodeableConcept)"
        },
        {
            "parameter": "container-identifier",
            "type": "token",
            "field": "Substance.instance.identifier"
        },
        {
            "parameter": "expiry",
            "type": "date",
            "field": "Substance.instance.expiry"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Substance.identifier"
        },
        {
            "parameter": "quantity",
            "type": "quantity",
            "field": "Substance.instance.quantity"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Substance.status"
        },
        {
            "parameter": "substance-reference",
            "type": "reference",
            "field": "(Substance.ingredient.substance as Reference)"
        }
    ],
    "SubstanceSpecification": [
        {
            "parameter": "code",
            "type": "token",
            "field": "SubstanceSpecification.code.code"
        }
    ],
    "SupplyDelivery": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "SupplyDelivery.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "SupplyDelivery.patient"
        },
        {
            "parameter": "receiver",
            "type": "reference",
            "field": "SupplyDelivery.receiver"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "SupplyDelivery.status"
        },
        {
            "parameter": "supplier",
            "type": "reference",
            "field": "SupplyDelivery.supplier"
        }
    ],
    "SupplyRequest": [
        {
            "parameter": "category",
            "type": "token",
            "field": "SupplyRequest.category"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "SupplyRequest.authoredOn"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "SupplyRequest.identifier"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "SupplyRequest.requester"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "SupplyRequest.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "SupplyRequest.deliverTo"
        },
        {
            "parameter": "supplier",
            "type": "reference",
            "field": "SupplyRequest.supplier"
        }
    ],
    "Task": [
        {
            "parameter": "authored-on",
            "type": "date",
            "field": "Task.authoredOn"
        },
        {
            "parameter": "based-on",
            "type": "reference",
            "field": "Task.basedOn"
        },
        {
            "parameter": "business-status",
            "type": "token",
            "field": "Task.businessStatus"
        },
        {
            "parameter": "code",
            "type": "token",
            "field": "Task.code"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "Task.encounter"
        },
        {
            "parameter": "focus",
            "type": "reference",
            "field": "Task.focus"
        },
        {
            "parameter": "group-identifier",
            "type": "token",
            "field": "Task.groupIdentifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "Task.identifier"
        },
        {
            "parameter": "intent",
            "type": "token",
            "field": "Task.intent"
        },
        {
            "parameter": "modified",
            "type": "date",
            "field": "Task.lastModified"
        },
        {
            "parameter": "owner",
            "type": "reference",
            "field": "Task.owner"
        },
        {
            "parameter": "part-of",
            "type": "reference",
            "field": "Task.partOf"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "Task.for.where(resolve() is Patient)"
        },
        {
            "parameter": "performer",
            "type": "token",
            "field": "Task.performerType"
        },
        {
            "parameter": "period",
            "type": "date",
            "field": "Task.executionPeriod"
        },
        {
            "parameter": "priority",
            "type": "token",
            "field": "Task.priority"
        },
        {
            "parameter": "requester",
            "type": "reference",
            "field": "Task.requester"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "Task.status"
        },
        {
            "parameter": "subject",
            "type": "reference",
            "field": "Task.for"
        }
    ],
    "TerminologyCapabilities": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(TerminologyCapabilities.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(TerminologyCapabilities.useContext.value as Quantity)|(TerminologyCapabilities.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "TerminologyCapabilities.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "TerminologyCapabilities.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "TerminologyCapabilities.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "TerminologyCapabilities.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "TerminologyCapabilities.description"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "TerminologyCapabilities.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "TerminologyCapabilities.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "TerminologyCapabilities.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "TerminologyCapabilities.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "TerminologyCapabilities.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "TerminologyCapabilities.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "TerminologyCapabilities.version"
        }
    ],
    "TestReport": [
        {
            "parameter": "identifier",
            "type": "token",
            "field": "TestReport.identifier"
        },
        {
            "parameter": "issued",
            "type": "date",
            "field": "TestReport.issued"
        },
        {
            "parameter": "participant",
            "type": "uri",
            "field": "TestReport.participant.uri"
        },
        {
            "parameter": "result",
            "type": "token",
            "field": "TestReport.result"
        },
        {
            "parameter": "tester",
            "type": "string",
            "field": "TestReport.tester"
        },
        {
            "parameter": "testscript",
            "type": "reference",
            "field": "TestReport.testScript"
        }
    ],
    "TestScript": [
        {
            "parameter": "context",
            "type": "token",
            "field": "(TestScript.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(TestScript.useContext.value as Quantity)|(TestScript.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "TestScript.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "TestScript.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "TestScript.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "TestScript.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "TestScript.description"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "TestScript.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "TestScript.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "TestScript.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "TestScript.publisher"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "TestScript.status"
        },
        {
            "parameter": "testscript-capability",
            "type": "string",
            "field": "TestScript.metadata.capability.description"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "TestScript.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "TestScript.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "TestScript.version"
        }
    ],
    "ValueSet": [
        {
            "parameter": "code",
            "type": "token",
            "field": "ValueSet.expansion.contains.code|ValueSet.compose.include.concept.code"
        },
        {
            "parameter": "context",
            "type": "token",
            "field": "(ValueSet.useContext.value as CodeableConcept)"
        },
        {
            "parameter": "context-quantity",
            "type": "quantity",
            "field": "(ValueSet.useContext.value as Quantity)|(ValueSet.useContext.value as Range)"
        },
        {
            "parameter": "context-type",
            "type": "token",
            "field": "ValueSet.useContext.code"
        },
        {
            "parameter": "context-type-quantity",
            "type": "composite",
            "field": "ValueSet.useContext"
        },
        {
            "parameter": "context-type-value",
            "type": "composite",
            "field": "ValueSet.useContext"
        },
        {
            "parameter": "date",
            "type": "date",
            "field": "ValueSet.date"
        },
        {
            "parameter": "description",
            "type": "string",
            "field": "ValueSet.description"
        },
        {
            "parameter": "expansion",
            "type": "uri",
            "field": "ValueSet.expansion.identifier"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "ValueSet.identifier"
        },
        {
            "parameter": "jurisdiction",
            "type": "token",
            "field": "ValueSet.jurisdiction"
        },
        {
            "parameter": "name",
            "type": "string",
            "field": "ValueSet.name"
        },
        {
            "parameter": "publisher",
            "type": "string",
            "field": "ValueSet.publisher"
        },
        {
            "parameter": "reference",
            "type": "uri",
            "field": "ValueSet.compose.include.system"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "ValueSet.status"
        },
        {
            "parameter": "title",
            "type": "string",
            "field": "ValueSet.title"
        },
        {
            "parameter": "url",
            "type": "uri",
            "field": "ValueSet.url"
        },
        {
            "parameter": "version",
            "type": "token",
            "field": "ValueSet.version"
        }
    ],
    "VerificationResult": [
        {
            "parameter": "target",
            "type": "reference",
            "field": "VerificationResult.target"
        }
    ],
    "VisionPrescription": [
        {
            "parameter": "datewritten",
            "type": "date",
            "field": "VisionPrescription.dateWritten"
        },
        {
            "parameter": "encounter",
            "type": "reference",
            "field": "VisionPrescription.encounter"
        },
        {
            "parameter": "identifier",
            "type": "token",
            "field": "VisionPrescription.identifier"
        },
        {
            "parameter": "patient",
            "type": "reference",
            "field": "VisionPrescription.patient"
        },
        {
            "parameter": "prescriber",
            "type": "reference",
            "field": "VisionPrescription.prescriber"
        },
        {
            "parameter": "status",
            "type": "token",
            "field": "VisionPrescription.status"
        }
    ]
}